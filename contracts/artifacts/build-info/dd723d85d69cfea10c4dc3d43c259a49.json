{
	"id": "dd723d85d69cfea10c4dc3d43c259a49",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.5.16",
	"solcLongVersion": "0.5.16+commit.9c3226ce",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/SaitaSwapERC20.sol": {
				"content": "// SPDX-License-Identifier: UNLICENSED\npragma solidity =0.5.16;\n\nimport './interfaces/ISaitaSwapERC20.sol';\nimport './libraries/SafeMath.sol';\n\ncontract SaitaSwapERC20 is ISaitaSwapERC20 {\n    using SafeMath for uint;\n\n    string public constant name = 'SaitaSwap LPs';\n    string public constant symbol = 'slp';\n    uint8 public constant decimals = 18;\n    uint  public totalSupply;\n    mapping(address => uint) public balanceOf;\n    mapping(address => mapping(address => uint)) public allowance;\n\n    bytes32 public DOMAIN_SEPARATOR;\n    // keccak256(\"Permit(address owner,address spender,uint256 value,uint256 nonce,uint256 deadline)\");\n    bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9;\n    mapping(address => uint) public nonces;\n\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n    \n    modifier ReChain{\n        uint chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name)),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n        _;\n    }\n\n    constructor() public {\n        \n     uint chainId;\n        assembly {\n            chainId := chainid\n        }\n        DOMAIN_SEPARATOR = keccak256(\n            abi.encode(\n                keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)'),\n                keccak256(bytes(name)),\n                keccak256(bytes('1')),\n                chainId,\n                address(this)\n            )\n        );\n    }\n\n    function _mint(address to, uint value) internal {\n        totalSupply = totalSupply.add(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(address(0), to, value);\n    }\n\n    function _burn(address from, uint value) internal {\n        balanceOf[from] = balanceOf[from].sub(value);\n        totalSupply = totalSupply.sub(value);\n        emit Transfer(from, address(0), value);\n    }\n\n    function _approve(address owner, address spender, uint value) private {\n        allowance[owner][spender] = value;\n        emit Approval(owner, spender, value);\n    }\n\n    function _transfer(address from, address to, uint value) private {\n        balanceOf[from] = balanceOf[from].sub(value);\n        balanceOf[to] = balanceOf[to].add(value);\n        emit Transfer(from, to, value);\n    }\n\n    function approve(address spender, uint value) external returns (bool) {\n        _approve(msg.sender, spender, value);\n        return true;\n    }\n\n    function transfer(address to, uint value) external returns (bool) {\n        _transfer(msg.sender, to, value);\n        return true;\n    }\n\n    function transferFrom(address from, address to, uint value) external returns (bool) {\n        if (allowance[from][msg.sender] != uint(-1)) {\n            allowance[from][msg.sender] = allowance[from][msg.sender].sub(value);\n        }\n        _transfer(from, to, value);\n        return true;\n    }\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external ReChain {\n        require(deadline >= block.timestamp, 'SaitaSwap: EXPIRED');\n        bytes32 digest = keccak256(\n            abi.encodePacked(\n                '\\x19\\x01',\n                DOMAIN_SEPARATOR,\n                keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline))\n            )\n        );\n        address recoveredAddress = ecrecover(digest, v, r, s);\n        require(recoveredAddress != address(0) && recoveredAddress == owner, 'SaitaSwap: INVALID_SIGNATURE');\n        _approve(owner, spender, value);\n    }\n}"
			},
			"contracts/libraries/SafeMath.sol": {
				"content": "pragma solidity >=0.5.16;\n\n// a library for performing overflow-safe math, courtesy of DappHub (https://github.com/dapphub/ds-math)\n\nlibrary SafeMath {\n    function add(uint x, uint y) internal pure returns (uint z) {\n        require((z = x + y) >= x, 'ds-math-add-overflow');\n    }\n\n    function sub(uint x, uint y) internal pure returns (uint z) {\n        require((z = x - y) <= x, 'ds-math-sub-underflow');\n    }\n\n    function mul(uint x, uint y) internal pure returns (uint z) {\n        require(y == 0 || (z = x * y) / y == x, 'ds-math-mul-overflow');\n    }\n}"
			},
			"contracts/interfaces/ISaitaSwapERC20.sol": {
				"content": "pragma solidity >=0.5.0;\n\ninterface ISaitaSwapERC20 {\n    event Approval(address indexed owner, address indexed spender, uint value);\n    event Transfer(address indexed from, address indexed to, uint value);\n\n    function name() external pure returns (string memory);\n    function symbol() external pure returns (string memory);\n    function decimals() external pure returns (uint8);\n    function totalSupply() external view returns (uint);\n    function balanceOf(address owner) external view returns (uint);\n    function allowance(address owner, address spender) external view returns (uint);\n\n    function approve(address spender, uint value) external returns (bool);\n    function transfer(address to, uint value) external returns (bool);\n    function transferFrom(address from, address to, uint value) external returns (bool);\n\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n    function PERMIT_TYPEHASH() external pure returns (bytes32);\n    function nonces(address owner) external view returns (uint);\n\n    function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external;\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": [],
			"evmVersion": "istanbul"
		}
	},
	"output": {
		"contracts": {
			"contracts/SaitaSwapERC20.sol": {
				"SaitaSwapERC20": {
					"abi": [
						{
							"inputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/SaitaSwapERC20.sol\":144:3947  contract SaitaSwapERC20 is ISaitaSwapERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"contracts/SaitaSwapERC20.sol\":1418:1868  constructor() public {... */\n  callvalue\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":30:31   */\n  0x00\n    /* \"--CODEGEN--\":27:28   */\n  dup1\n    /* \"--CODEGEN--\":20:32   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_1:\n  pop\n    /* \"contracts/SaitaSwapERC20.sol\":1607:1702  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  mload(0x40)\n    /* \"contracts/SaitaSwapERC20.sol\":1511:1518  chainid */\n  chainid\n  swap1\n    /* \"contracts/SaitaSwapERC20.sol\":1607:1702  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n  dup1\n  0x52\n  data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n  dup3\n  codecopy\n  0x40\n  dup1\n  mload\n  swap2\n  dup3\n  swap1\n  sub\n  0x52\n  add\n  dup3\n  keccak256\n    /* \"contracts/SaitaSwapERC20.sol\":1736:1740  name */\n  dup3\n  dup3\n  add\n  dup3\n  mstore\n  0x0d\n  dup4\n  mstore\n  shl(0x98, 0x536169746153776170204c5073)\n  0x20\n  swap4\n  dup5\n  add\n  mstore\n    /* \"contracts/SaitaSwapERC20.sol\":1770:1780  bytes('1') */\n  dup2\n  mload\n  dup1\n  dup4\n  add\n  dup4\n  mstore\n  0x01\n  dup2\n  mstore\n  shl(0xf8, 0x31)\n  swap1\n  dup5\n  add\n  mstore\n    /* \"contracts/SaitaSwapERC20.sol\":1579:1851  abi.encode(... */\n  dup2\n  mload\n  dup1\n  dup5\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n    /* \"contracts/SaitaSwapERC20.sol\":1720:1742  keccak256(bytes(name)) */\n  0x1651e190aacb4c4c6e236d176db06acca329adaed8d7377e08d89572632a33ba\n    /* \"contracts/SaitaSwapERC20.sol\":1579:1851  abi.encode(... */\n  dup2\n  dup4\n  add\n  mstore\n    /* \"contracts/SaitaSwapERC20.sol\":1760:1781  keccak256(bytes('1')) */\n  0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n    /* \"contracts/SaitaSwapERC20.sol\":1579:1851  abi.encode(... */\n  0x60\n  dup3\n  add\n  mstore\n  0x80\n  dup2\n  add\n  swap5\n  swap1\n  swap5\n  mstore\n    /* \"contracts/SaitaSwapERC20.sol\":1832:1836  this */\n  address\n    /* \"contracts/SaitaSwapERC20.sol\":1579:1851  abi.encode(... */\n  0xa0\n  dup1\n  dup7\n  add\n  swap2\n  swap1\n  swap2\n  mstore\n  dup2\n  mload\n    /* \"--CODEGEN--\":26:47   */\n  dup1\n  dup7\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  swap1\n  swap2\n  add\n    /* \"--CODEGEN--\":6:55   */\n  dup2\n  mstore\n    /* \"contracts/SaitaSwapERC20.sol\":1579:1851  abi.encode(... */\n  0xc0\n  swap1\n  swap5\n  add\n  swap1\n  mstore\n    /* \"contracts/SaitaSwapERC20.sol\":1556:1861  keccak256(... */\n  dup3\n  mload\n  swap3\n  add\n  swap2\n  swap1\n  swap2\n  keccak256\n    /* \"contracts/SaitaSwapERC20.sol\":1537:1553  DOMAIN_SEPARATOR */\n  0x03\n    /* \"contracts/SaitaSwapERC20.sol\":1537:1861  DOMAIN_SEPARATOR = keccak256(... */\n  sstore\n  pop\n    /* \"contracts/SaitaSwapERC20.sol\":144:3947  contract SaitaSwapERC20 is ISaitaSwapERC20 {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\ndata_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\nsub_0: assembly {\n        /* \"contracts/SaitaSwapERC20.sol\":144:3947  contract SaitaSwapERC20 is ISaitaSwapERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_1:\n        /* \"contracts/SaitaSwapERC20.sol\":144:3947  contract SaitaSwapERC20 is ISaitaSwapERC20 {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3644e515\n      gt\n      tag_16\n      jumpi\n      dup1\n      0x95d89b41\n      gt\n      tag_17\n      jumpi\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xd505accf\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x3644e515\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x7ecebe00\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_16:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x30adf81f\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/SaitaSwapERC20.sol\":223:268  string public constant name = 'SaitaSwap LPs' */\n    tag_3:\n      tag_18\n      tag_19\n      jump\t// in\n    tag_18:\n      0x40\n      dup1\n      mload\n      0x20\n      dup1\n      dup3\n      mstore\n      dup4\n      mload\n      dup2\n      dup4\n      add\n      mstore\n      dup4\n      mload\n      swap2\n      swap3\n      dup4\n      swap3\n      swap1\n      dup4\n      add\n      swap2\n      dup6\n      add\n      swap1\n      dup1\n      dup4\n      dup4\n      0x00\n        /* \"--CODEGEN--\":8:108   */\n    tag_20:\n        /* \"--CODEGEN--\":33:36   */\n      dup4\n        /* \"--CODEGEN--\":30:31   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      lt\n        /* \"--CODEGEN--\":8:108   */\n      iszero\n      tag_22\n      jumpi\n        /* \"--CODEGEN--\":90:101   */\n      dup2\n      dup2\n      add\n        /* \"--CODEGEN--\":84:102   */\n      mload\n        /* \"--CODEGEN--\":71:82   */\n      dup4\n      dup3\n      add\n        /* \"--CODEGEN--\":64:103   */\n      mstore\n        /* \"--CODEGEN--\":52:54   */\n      0x20\n        /* \"--CODEGEN--\":45:55   */\n      add\n        /* \"--CODEGEN--\":8:108   */\n      jump(tag_20)\n    tag_22:\n        /* \"--CODEGEN--\":12:26   */\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":223:268  string public constant name = 'SaitaSwap LPs' */\n      pop\n      pop\n      pop\n      swap1\n      pop\n      swap1\n      dup2\n      add\n      swap1\n      0x1f\n      and\n      dup1\n      iszero\n      tag_23\n      jumpi\n      dup1\n      dup3\n      sub\n      dup1\n      mload\n      0x01\n      dup4\n      0x20\n      sub\n      0x0100\n      exp\n      sub\n      not\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n    tag_23:\n      pop\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/SaitaSwapERC20.sol\":2682:2826  function approve(address spender, uint value) external returns (bool) {... */\n    tag_4:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_25\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_25:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":2682:2826  function approve(address spender, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_26\n      jump\t// in\n    tag_24:\n      0x40\n      dup1\n      mload\n      swap2\n      iszero\n      iszero\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/SaitaSwapERC20.sol\":358:382  uint  public totalSupply */\n    tag_5:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/SaitaSwapERC20.sol\":2974:3269  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_6:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x60\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_30\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_30:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":2974:3269  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      add\n      calldataload\n      tag_31\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":644:752  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_7:\n      tag_27\n      tag_33\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":317:352  uint8 public constant decimals = 18 */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      0x40\n      dup1\n      mload\n      0xff\n      swap1\n      swap3\n      and\n      dup3\n      mstore\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      return\n        /* \"contracts/SaitaSwapERC20.sol\":503:534  bytes32 public DOMAIN_SEPARATOR */\n    tag_9:\n      tag_27\n      tag_37\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":388:429  mapping(address => uint) public balanceOf */\n    tag_10:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_39\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_39:\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":388:429  mapping(address => uint) public balanceOf */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_40\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":758:796  mapping(address => uint) public nonces */\n    tag_11:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x20\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_42\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_42:\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":758:796  mapping(address => uint) public nonces */\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      tag_43\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":274:311  string public constant symbol = 'slp' */\n    tag_12:\n      tag_18\n      tag_45\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":2832:2968  function transfer(address to, uint value) external returns (bool) {... */\n    tag_13:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_51\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_51:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":2832:2968  function transfer(address to, uint value) external returns (bool) {... */\n      dup2\n      calldataload\n      and\n      swap1\n      0x20\n      add\n      calldataload\n      tag_52\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":3275:3945  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external ReChain {... */\n    tag_14:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:16   */\n      0xe0\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:17   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_54\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x00\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_54:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":3275:3945  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external ReChain {... */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      dup2\n      add\n      calldataload\n      swap1\n      swap2\n      and\n      swap1\n      0x40\n      dup2\n      add\n      calldataload\n      swap1\n      0x60\n      dup2\n      add\n      calldataload\n      swap1\n      0xff\n      0x80\n      dup3\n      add\n      calldataload\n      and\n      swap1\n      0xa0\n      dup2\n      add\n      calldataload\n      swap1\n      0xc0\n      add\n      calldataload\n      tag_55\n      jump\t// in\n    tag_53:\n      stop\n        /* \"contracts/SaitaSwapERC20.sol\":435:496  mapping(address => mapping(address => uint)) public allowance */\n    tag_15:\n      tag_27\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":13:15   */\n      0x40\n        /* \"--CODEGEN--\":8:11   */\n      dup2\n        /* \"--CODEGEN--\":5:16   */\n      lt\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_57\n      jumpi\n        /* \"--CODEGEN--\":29:30   */\n      0x00\n        /* \"--CODEGEN--\":26:27   */\n      dup1\n        /* \"--CODEGEN--\":19:31   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_57:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":435:496  mapping(address => mapping(address => uint)) public allowance */\n      dup2\n      calldataload\n      dup2\n      and\n      swap2\n      0x20\n      add\n      calldataload\n      and\n      tag_58\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":223:268  string public constant name = 'SaitaSwap LPs' */\n    tag_19:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x0d\n      dup2\n      mstore\n      0x20\n      add\n      shl(0x98, 0x536169746153776170204c5073)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":2682:2826  function approve(address spender, uint value) external returns (bool) {... */\n    tag_26:\n        /* \"contracts/SaitaSwapERC20.sol\":2746:2750  bool */\n      0x00\n        /* \"contracts/SaitaSwapERC20.sol\":2762:2798  _approve(msg.sender, spender, value) */\n      tag_60\n        /* \"contracts/SaitaSwapERC20.sol\":2771:2781  msg.sender */\n      caller\n        /* \"contracts/SaitaSwapERC20.sol\":2783:2790  spender */\n      dup5\n        /* \"contracts/SaitaSwapERC20.sol\":2792:2797  value */\n      dup5\n        /* \"contracts/SaitaSwapERC20.sol\":2762:2770  _approve */\n      tag_61\n        /* \"contracts/SaitaSwapERC20.sol\":2762:2798  _approve(msg.sender, spender, value) */\n      jump\t// in\n    tag_60:\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":2815:2819  true */\n      0x01\n        /* \"contracts/SaitaSwapERC20.sol\":2682:2826  function approve(address spender, uint value) external returns (bool) {... */\n    tag_59:\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":358:382  uint  public totalSupply */\n    tag_28:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":2974:3269  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n    tag_31:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":3072:3087  allowance[from] */\n      dup4\n      and\n        /* \"contracts/SaitaSwapERC20.sol\":3052:3056  bool */\n      0x00\n        /* \"contracts/SaitaSwapERC20.sol\":3072:3087  allowance[from] */\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":3072:3081  allowance */\n      0x02\n        /* \"contracts/SaitaSwapERC20.sol\":3072:3087  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":3088:3098  msg.sender */\n      caller\n        /* \"contracts/SaitaSwapERC20.sol\":3072:3099  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      dup2\n      keccak256\n      sload\n      not(0x00)\n        /* \"contracts/SaitaSwapERC20.sol\":3072:3111  allowance[from][msg.sender] != uint(-1) */\n      eq\n        /* \"contracts/SaitaSwapERC20.sol\":3068:3206  if (allowance[from][msg.sender] != uint(-1)) {... */\n      tag_63\n      jumpi\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":3157:3172  allowance[from] */\n      dup5\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":3157:3166  allowance */\n      0x02\n        /* \"contracts/SaitaSwapERC20.sol\":3157:3172  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":3173:3183  msg.sender */\n      caller\n        /* \"contracts/SaitaSwapERC20.sol\":3157:3184  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SaitaSwapERC20.sol\":3157:3195  allowance[from][msg.sender].sub(value) */\n      tag_64\n      swap1\n        /* \"contracts/SaitaSwapERC20.sol\":3189:3194  value */\n      dup4\n        /* \"contracts/SaitaSwapERC20.sol\":3157:3195  allowance[from][msg.sender].sub(value) */\n      0xffffffff\n        /* \"contracts/SaitaSwapERC20.sol\":3157:3188  allowance[from][msg.sender].sub */\n      tag_65\n        /* \"contracts/SaitaSwapERC20.sol\":3157:3195  allowance[from][msg.sender].sub(value) */\n      and\n      jump\t// in\n    tag_64:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":3127:3142  allowance[from] */\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":3127:3136  allowance */\n      0x02\n        /* \"contracts/SaitaSwapERC20.sol\":3127:3142  allowance[from] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":3143:3153  msg.sender */\n      caller\n        /* \"contracts/SaitaSwapERC20.sol\":3127:3154  allowance[from][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":3127:3195  allowance[from][msg.sender] = allowance[from][msg.sender].sub(value) */\n      sstore\n        /* \"contracts/SaitaSwapERC20.sol\":3068:3206  if (allowance[from][msg.sender] != uint(-1)) {... */\n    tag_63:\n        /* \"contracts/SaitaSwapERC20.sol\":3215:3241  _transfer(from, to, value) */\n      tag_66\n        /* \"contracts/SaitaSwapERC20.sol\":3225:3229  from */\n      dup5\n        /* \"contracts/SaitaSwapERC20.sol\":3231:3233  to */\n      dup5\n        /* \"contracts/SaitaSwapERC20.sol\":3235:3240  value */\n      dup5\n        /* \"contracts/SaitaSwapERC20.sol\":3215:3224  _transfer */\n      tag_67\n        /* \"contracts/SaitaSwapERC20.sol\":3215:3241  _transfer(from, to, value) */\n      jump\t// in\n    tag_66:\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":3258:3262  true */\n      0x01\n        /* \"contracts/SaitaSwapERC20.sol\":2974:3269  function transferFrom(address from, address to, uint value) external returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":644:752  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n    tag_33:\n        /* \"contracts/SaitaSwapERC20.sol\":686:752  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/SaitaSwapERC20.sol\":644:752  bytes32 public constant PERMIT_TYPEHASH = 0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":317:352  uint8 public constant decimals = 18 */\n    tag_35:\n        /* \"contracts/SaitaSwapERC20.sol\":350:352  18 */\n      0x12\n        /* \"contracts/SaitaSwapERC20.sol\":317:352  uint8 public constant decimals = 18 */\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":503:534  bytes32 public DOMAIN_SEPARATOR */\n    tag_37:\n      sload(0x03)\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":388:429  mapping(address => uint) public balanceOf */\n    tag_40:\n      mstore(0x20, 0x01)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":758:796  mapping(address => uint) public nonces */\n    tag_43:\n      mstore(0x20, 0x04)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":274:311  string public constant symbol = 'slp' */\n    tag_45:\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x03\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xec, 0x0736c7)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":2832:2968  function transfer(address to, uint value) external returns (bool) {... */\n    tag_52:\n        /* \"contracts/SaitaSwapERC20.sol\":2892:2896  bool */\n      0x00\n        /* \"contracts/SaitaSwapERC20.sol\":2908:2940  _transfer(msg.sender, to, value) */\n      tag_60\n        /* \"contracts/SaitaSwapERC20.sol\":2918:2928  msg.sender */\n      caller\n        /* \"contracts/SaitaSwapERC20.sol\":2930:2932  to */\n      dup5\n        /* \"contracts/SaitaSwapERC20.sol\":2934:2939  value */\n      dup5\n        /* \"contracts/SaitaSwapERC20.sol\":2908:2917  _transfer */\n      tag_67\n        /* \"contracts/SaitaSwapERC20.sol\":2908:2940  _transfer(msg.sender, to, value) */\n      jump\t// in\n        /* \"contracts/SaitaSwapERC20.sol\":3275:3945  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external ReChain {... */\n    tag_55:\n        /* \"contracts/SaitaSwapERC20.sol\":1140:1235  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n      mload(0x40)\n        /* \"contracts/SaitaSwapERC20.sol\":1044:1051  chainid */\n      chainid\n      swap1\n        /* \"contracts/SaitaSwapERC20.sol\":1140:1235  keccak256('EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)') */\n      dup1\n      0x52\n      data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f\n      dup3\n      codecopy\n      0x40\n      dup1\n      mload\n      swap2\n      dup3\n      swap1\n      sub\n      0x52\n      add\n      dup3\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":1269:1273  name */\n      dup3\n      dup3\n      add\n      dup3\n      mstore\n      0x0d\n      dup4\n      mstore\n      shl(0x98, 0x536169746153776170204c5073)\n      0x20\n      swap4\n      dup5\n      add\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":1303:1313  bytes('1') */\n      dup2\n      mload\n      dup1\n      dup4\n      add\n      dup4\n      mstore\n      0x01\n      dup2\n      mstore\n      shl(0xf8, 0x31)\n      swap1\n      dup5\n      add\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":1112:1384  abi.encode(... */\n      dup2\n      mload\n      dup1\n      dup5\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":1253:1275  keccak256(bytes(name)) */\n      0x1651e190aacb4c4c6e236d176db06acca329adaed8d7377e08d89572632a33ba\n        /* \"contracts/SaitaSwapERC20.sol\":1112:1384  abi.encode(... */\n      dup2\n      dup4\n      add\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":1293:1314  keccak256(bytes('1')) */\n      0xc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6\n        /* \"contracts/SaitaSwapERC20.sol\":1112:1384  abi.encode(... */\n      0x60\n      dup3\n      add\n      mstore\n      0x80\n      dup2\n      add\n      dup6\n      swap1\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":1365:1369  this */\n      address\n        /* \"contracts/SaitaSwapERC20.sol\":1112:1384  abi.encode(... */\n      0xa0\n      dup1\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n      dup3\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup4\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":1112:1384  abi.encode(... */\n      0xc0\n      swap1\n      swap2\n      add\n      swap1\n      swap2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":1089:1394  keccak256(... */\n      dup1\n      mload\n      swap2\n      add\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":1070:1086  DOMAIN_SEPARATOR */\n      0x03\n        /* \"contracts/SaitaSwapERC20.sol\":1070:1394  DOMAIN_SEPARATOR = keccak256(... */\n      sstore\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":3428:3443  block.timestamp */\n      timestamp\n        /* \"contracts/SaitaSwapERC20.sol\":3416:3443  deadline >= block.timestamp */\n      dup6\n      lt\n      iszero\n        /* \"contracts/SaitaSwapERC20.sol\":3408:3466  require(deadline >= block.timestamp, 'SaitaSwap: EXPIRED') */\n      tag_72\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x12\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x72, 0x14d85a5d1854ddd85c0e8811561412549151)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_72:\n        /* \"contracts/SaitaSwapERC20.sol\":3578:3594  DOMAIN_SEPARATOR */\n      sload(0x03)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":3673:3686  nonces[owner] */\n      dup1\n      dup11\n      and\n        /* \"contracts/SaitaSwapERC20.sol\":3476:3490  bytes32 digest */\n      0x00\n        /* \"contracts/SaitaSwapERC20.sol\":3673:3686  nonces[owner] */\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":3673:3679  nonces */\n      0x04\n        /* \"contracts/SaitaSwapERC20.sol\":3673:3686  nonces[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":3673:3688  nonces[owner]++ */\n      dup1\n      sload\n      0x01\n      dup1\n      dup3\n      add\n      swap1\n      swap3\n      sstore\n        /* \"contracts/SaitaSwapERC20.sol\":3622:3699  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup3\n      mload\n        /* \"contracts/SaitaSwapERC20.sol\":686:752  0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9 */\n      0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9\n        /* \"contracts/SaitaSwapERC20.sol\":3622:3699  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      dup2\n      dup7\n      add\n      mstore\n      dup1\n      dup5\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      swap6\n      dup15\n      and\n      0x60\n      dup7\n      add\n      mstore\n      0x80\n      dup6\n      add\n      dup14\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      swap6\n      swap1\n      swap6\n      mstore\n      0xc0\n      dup1\n      dup6\n      add\n      dup13\n      swap1\n      mstore\n      dup2\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup7\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap2\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":3622:3699  abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline) */\n      0xe0\n      dup6\n      add\n      dup3\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":3612:3700  keccak256(abi.encode(PERMIT_TYPEHASH, owner, spender, value, nonces[owner]++, deadline)) */\n      dup1\n      mload\n      swap1\n      dup4\n      add\n      keccak256\n      shl(0xf0, 0x1901)\n        /* \"contracts/SaitaSwapERC20.sol\":3516:3714  abi.encodePacked(... */\n      0x0100\n      dup7\n      add\n      mstore\n      0x0102\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      0x0122\n      dup1\n      dup6\n      add\n      swap7\n      swap1\n      swap7\n      mstore\n      dup1\n      mload\n        /* \"--CODEGEN--\":26:47   */\n      dup1\n      dup6\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      swap1\n      swap7\n      add\n        /* \"--CODEGEN--\":6:55   */\n      dup7\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":3516:3714  abi.encodePacked(... */\n      0x0142\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":3493:3724  keccak256(... */\n      dup7\n      mload\n      swap7\n      dup4\n      add\n      swap7\n      swap1\n      swap7\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":3761:3787  ecrecover(digest, v, r, s) */\n      swap6\n      dup4\n      swap1\n      mstore\n      0x0162\n      dup5\n      add\n      dup1\n      dup3\n      mstore\n      dup7\n      swap1\n      mstore\n      0xff\n      dup11\n      and\n      0x0182\n      dup6\n      add\n      mstore\n      0x01a2\n      dup5\n      add\n      dup10\n      swap1\n      mstore\n      0x01c2\n      dup5\n      add\n      dup9\n      swap1\n      mstore\n      mload\n        /* \"contracts/SaitaSwapERC20.sol\":3476:3490  bytes32 digest */\n      swap2\n      swap4\n        /* \"contracts/SaitaSwapERC20.sol\":3673:3688  nonces[owner]++ */\n      swap3\n        /* \"contracts/SaitaSwapERC20.sol\":3761:3787  ecrecover(digest, v, r, s) */\n      0x01e2\n      dup1\n      dup3\n      add\n      swap4\n      not(0x1f)\n      dup2\n      add\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n        /* \"contracts/SaitaSwapERC20.sol\":3673:3688  nonces[owner]++ */\n      dup6\n        /* \"contracts/SaitaSwapERC20.sol\":3761:3787  ecrecover(digest, v, r, s) */\n      gas\n      staticcall\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_73\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x00\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x00\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_73:\n      pop\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":3761:3787  ecrecover(digest, v, r, s) */\n      mload(add(not(0x1f), mload(0x40)))\n      swap2\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":3805:3835  recoveredAddress != address(0) */\n      dup2\n      and\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"contracts/SaitaSwapERC20.sol\":3805:3864  recoveredAddress != address(0) && recoveredAddress == owner */\n      tag_74\n      jumpi\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":3859:3864  owner */\n      dup10\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":3839:3864  recoveredAddress == owner */\n      and\n        /* \"contracts/SaitaSwapERC20.sol\":3839:3855  recoveredAddress */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":3839:3864  recoveredAddress == owner */\n      and\n      eq\n        /* \"contracts/SaitaSwapERC20.sol\":3805:3864  recoveredAddress != address(0) && recoveredAddress == owner */\n    tag_74:\n        /* \"contracts/SaitaSwapERC20.sol\":3797:3897  require(recoveredAddress != address(0) && recoveredAddress == owner, 'SaitaSwap: INVALID_SIGNATURE') */\n      tag_75\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x1c\n      0x24\n      dup3\n      add\n      mstore\n      0x5361697461537761703a20494e56414c49445f5349474e415455524500000000\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    tag_75:\n        /* \"contracts/SaitaSwapERC20.sol\":3907:3938  _approve(owner, spender, value) */\n      tag_76\n        /* \"contracts/SaitaSwapERC20.sol\":3916:3921  owner */\n      dup11\n        /* \"contracts/SaitaSwapERC20.sol\":3923:3930  spender */\n      dup11\n        /* \"contracts/SaitaSwapERC20.sol\":3932:3937  value */\n      dup11\n        /* \"contracts/SaitaSwapERC20.sol\":3907:3915  _approve */\n      tag_61\n        /* \"contracts/SaitaSwapERC20.sol\":3907:3938  _approve(owner, spender, value) */\n      jump\t// in\n    tag_76:\n        /* \"contracts/SaitaSwapERC20.sol\":1404:1405  _ */\n      pop\n      pop\n        /* \"contracts/SaitaSwapERC20.sol\":3275:3945  function permit(address owner, address spender, uint value, uint deadline, uint8 v, bytes32 r, bytes32 s) external ReChain {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":435:496  mapping(address => mapping(address => uint)) public allowance */\n    tag_58:\n      0x02\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      dup2\n      jump\t// out\n        /* \"contracts/SaitaSwapERC20.sol\":2288:2454  function _approve(address owner, address spender, uint value) private {... */\n    tag_61:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":2368:2384  allowance[owner] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":2368:2377  allowance */\n      0x02\n        /* \"contracts/SaitaSwapERC20.sol\":2368:2384  allowance[owner] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":2368:2393  allowance[owner][spender] */\n      swap5\n      dup8\n      and\n      dup1\n      dup5\n      mstore\n      swap5\n      dup3\n      mstore\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":2368:2401  allowance[owner][spender] = value */\n      dup6\n      swap1\n      sstore\n        /* \"contracts/SaitaSwapERC20.sol\":2416:2447  Approval(owner, spender, value) */\n      dup2\n      mload\n      dup6\n      dup2\n      mstore\n      swap2\n      mload\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n      swap3\n      dup2\n      swap1\n      sub\n      swap1\n      swap2\n      add\n      swap1\n      log3\n        /* \"contracts/SaitaSwapERC20.sol\":2288:2454  function _approve(address owner, address spender, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":288:415  function sub(uint x, uint y) internal pure returns (uint z) {... */\n    tag_65:\n        /* \"contracts/libraries/SafeMath.sol\":371:376  x - y */\n      dup1\n      dup3\n      sub\n        /* \"contracts/libraries/SafeMath.sol\":366:382  (z = x - y) <= x */\n      dup3\n      dup2\n      gt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":358:408  require((z = x - y) <= x, 'ds-math-sub-underflow') */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x15\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x58, 0x64732d6d6174682d7375622d756e646572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n        /* \"contracts/SaitaSwapERC20.sol\":2460:2676  function _transfer(address from, address to, uint value) private {... */\n    tag_67:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":2553:2568  balanceOf[from] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":2553:2562  balanceOf */\n      0x01\n        /* \"contracts/SaitaSwapERC20.sol\":2553:2568  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n      sload\n        /* \"contracts/SaitaSwapERC20.sol\":2553:2579  balanceOf[from].sub(value) */\n      tag_81\n      swap1\n        /* \"contracts/SaitaSwapERC20.sol\":2573:2578  value */\n      dup3\n        /* \"contracts/SaitaSwapERC20.sol\":2553:2579  balanceOf[from].sub(value) */\n      0xffffffff\n        /* \"contracts/SaitaSwapERC20.sol\":2553:2572  balanceOf[from].sub */\n      tag_65\n        /* \"contracts/SaitaSwapERC20.sol\":2553:2579  balanceOf[from].sub(value) */\n      and\n      jump\t// in\n    tag_81:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":2535:2550  balanceOf[from] */\n      dup1\n      dup6\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":2535:2544  balanceOf */\n      0x01\n        /* \"contracts/SaitaSwapERC20.sol\":2535:2550  balanceOf[from] */\n      0x20\n      mstore\n      0x40\n      dup1\n      dup3\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":2535:2579  balanceOf[from] = balanceOf[from].sub(value) */\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"contracts/SaitaSwapERC20.sol\":2605:2618  balanceOf[to] */\n      swap1\n      dup5\n      and\n      dup2\n      mstore\n      keccak256\n      sload\n        /* \"contracts/SaitaSwapERC20.sol\":2605:2629  balanceOf[to].add(value) */\n      tag_82\n      swap1\n        /* \"contracts/SaitaSwapERC20.sol\":2623:2628  value */\n      dup3\n        /* \"contracts/SaitaSwapERC20.sol\":2605:2629  balanceOf[to].add(value) */\n      0xffffffff\n        /* \"contracts/SaitaSwapERC20.sol\":2605:2622  balanceOf[to].add */\n      tag_83\n        /* \"contracts/SaitaSwapERC20.sol\":2605:2629  balanceOf[to].add(value) */\n      and\n      jump\t// in\n    tag_82:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"contracts/SaitaSwapERC20.sol\":2589:2602  balanceOf[to] */\n      dup1\n      dup5\n      and\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"contracts/SaitaSwapERC20.sol\":2589:2598  balanceOf */\n      0x01\n        /* \"contracts/SaitaSwapERC20.sol\":2589:2602  balanceOf[to] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"contracts/SaitaSwapERC20.sol\":2589:2629  balanceOf[to] = balanceOf[to].add(value) */\n      swap5\n      swap1\n      swap5\n      sstore\n        /* \"contracts/SaitaSwapERC20.sol\":2644:2669  Transfer(from, to, value) */\n      dup1\n      mload\n      dup6\n      dup2\n      mstore\n      swap1\n      mload\n        /* \"contracts/SaitaSwapERC20.sol\":2589:2602  balanceOf[to] */\n      swap2\n      swap4\n        /* \"contracts/SaitaSwapERC20.sol\":2644:2669  Transfer(from, to, value) */\n      swap3\n      dup8\n      and\n      swap3\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n      swap3\n      swap2\n      dup3\n      swap1\n      sub\n      add\n      swap1\n      log3\n        /* \"contracts/SaitaSwapERC20.sol\":2460:2676  function _transfer(address from, address to, uint value) private {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/libraries/SafeMath.sol\":156:282  function add(uint x, uint y) internal pure returns (uint z) {... */\n    tag_83:\n        /* \"contracts/libraries/SafeMath.sol\":239:244  x + y */\n      dup1\n      dup3\n      add\n        /* \"contracts/libraries/SafeMath.sol\":234:250  (z = x + y) >= x */\n      dup3\n      dup2\n      lt\n      iszero\n        /* \"contracts/libraries/SafeMath.sol\":226:275  require((z = x + y) >= x, 'ds-math-add-overflow') */\n      tag_59\n      jumpi\n      0x40\n      dup1\n      mload\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x20\n      0x04\n      dup3\n      add\n      mstore\n      0x14\n      0x24\n      dup3\n      add\n      mstore\n      shl(0x60, 0x64732d6d6174682d6164642d6f766572666c6f77)\n      0x44\n      dup3\n      add\n      mstore\n      swap1\n      mload\n      swap1\n      dup2\n      swap1\n      sub\n      0x64\n      add\n      swap1\n      revert\n    stop\n    data_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f 454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429\n\n    auxdata: 0xa265627a7a723158205838230347799f5ef4076636f11bb24e7d6e88863657aa72f16d25735f1ba6aa64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040514690806052610a908239604080519182900360520182208282018252600d83526c536169746153776170204c507360981b6020938401528151808301835260018152603160f81b908401528151808401919091527f1651e190aacb4c4c6e236d176db06acca329adaed8d7377e08d89572632a33ba818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6606082015260808101949094523060a0808601919091528151808603909101815260c0909401905282519201919091206003555061099f806100f16000396000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610339565b604080519115158252519081900360200190f35b610199610350565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610356565b6101996103f0565b6101f1610414565b6040805160ff9092168252519081900360200190f35b610199610419565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041f565b6101996004803603602081101561024b57600080fd5b50356001600160a01b0316610431565b6100dc610443565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610462565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561046f565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610740565b6040518060400160405280600d81526020016c536169746153776170204c507360981b81525081565b600061034633848461075d565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103db576001600160a01b03841660009081526002602090815260408083203384529091529020546103b6908363ffffffff6107bf16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e684848461080f565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b604051806040016040528060038152602001620736c760ec1b81525081565b600061034633848461080f565b60405146908060526109198239604080519182900360520182208282018252600d83526c536169746153776170204c507360981b6020938401528151808301835260018152603160f81b908401528151808401919091527f1651e190aacb4c4c6e236d176db06acca329adaed8d7377e08d89572632a33ba818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018590523060a0808301919091528251808303909101815260c090910190915280519101206003555042851015610587576040805162461bcd60e51b815260206004820152601260248201527114d85a5d1854ddd85c0e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b03808a1660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958e166060860152608085018d905260a085019590955260c08085018c90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff8a166101828501526101a284018990526101c28401889052519193926101e280820193601f1981019281900390910190855afa1580156106a2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106d85750896001600160a01b0316816001600160a01b0316145b610729576040805162461bcd60e51b815260206004820152601c60248201527f5361697461537761703a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b6107348a8a8a61075d565b50505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8082038281111561034a576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610838908263ffffffff6107bf16565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461086d908263ffffffff6108c916565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b8082018281101561034a576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429a265627a7a723158205838230347799f5ef4076636f11bb24e7d6e88863657aa72f16d25735f1ba6aa64736f6c63430005100032454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0xA90 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xD DUP4 MSTORE PUSH13 0x536169746153776170204C5073 PUSH1 0x98 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x1651E190AACB4C4C6E236D176DB06ACCA329ADAED8D7377E08D89572632A33BA DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD SWAP5 SWAP1 SWAP5 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP7 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP5 ADD SWAP1 MSTORE DUP3 MLOAD SWAP3 ADD SWAP2 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 SSTORE POP PUSH2 0x99F DUP1 PUSH2 0xF1 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x356 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41F JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x431 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x443 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x462 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x536169746153776170204C5073 PUSH1 0x98 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 DUP5 PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3DB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B6 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7BF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E6 DUP5 DUP5 DUP5 PUSH2 0x80F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x736C7 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 DUP5 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x919 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xD DUP4 MSTORE PUSH13 0x536169746153776170204C5073 PUSH1 0x98 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x1651E190AACB4C4C6E236D176DB06ACCA329ADAED8D7377E08D89572632A33BA DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x3 SSTORE POP TIMESTAMP DUP6 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14D85A5D1854DDD85C0E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP15 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP14 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP11 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP10 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP9 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6D8 JUMPI POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x729 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361697461537761703A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x734 DUP11 DUP11 DUP11 PUSH2 0x75D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x838 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7BF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x86D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x8C9 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 LOG2 PUSH6 0x627A7A723158 KECCAK256 PC CODESIZE 0x23 SUB SELFBALANCE PUSH26 0x9F5EF4076636F11BB24E7D6E88863657AA72F16D25735F1BA6AA PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 ",
							"sourceMap": "144:3803:0:-;;;1418:450;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;1607:95:0;;1511:7;;1607:95;;;;;;;;;;;;;;;;1736:4;;;;;;;;-1:-1:-1;;;1736:4:0;;;;;1770:10;;;;;;;;;;-1:-1:-1;;;1770:10:0;;;;1579:272;;;;;;;;;1720:22;1579:272;;;;1760:21;1579:272;;;;;;;;;;;1832:4;1579:272;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1579:272:0;;;;;;1556:305;;;;;;;;1537:16;:324;-1:-1:-1;144:3803:0;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100cf5760003560e01c80633644e5151161008c57806395d89b411161006657806395d89b411461025b578063a9059cbb14610263578063d505accf1461028f578063dd62ed3e146102e2576100cf565b80633644e5151461020757806370a082311461020f5780637ecebe0014610235576100cf565b806306fdde03146100d4578063095ea7b31461015157806318160ddd1461019157806323b872dd146101ab57806330adf81f146101e1578063313ce567146101e9575b600080fd5b6100dc610310565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101165781810151838201526020016100fe565b50505050905090810190601f1680156101435780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61017d6004803603604081101561016757600080fd5b506001600160a01b038135169060200135610339565b604080519115158252519081900360200190f35b610199610350565b60408051918252519081900360200190f35b61017d600480360360608110156101c157600080fd5b506001600160a01b03813581169160208101359091169060400135610356565b6101996103f0565b6101f1610414565b6040805160ff9092168252519081900360200190f35b610199610419565b6101996004803603602081101561022557600080fd5b50356001600160a01b031661041f565b6101996004803603602081101561024b57600080fd5b50356001600160a01b0316610431565b6100dc610443565b61017d6004803603604081101561027957600080fd5b506001600160a01b038135169060200135610462565b6102e0600480360360e08110156102a557600080fd5b506001600160a01b03813581169160208101359091169060408101359060608101359060ff6080820135169060a08101359060c0013561046f565b005b610199600480360360408110156102f857600080fd5b506001600160a01b0381358116916020013516610740565b6040518060400160405280600d81526020016c536169746153776170204c507360981b81525081565b600061034633848461075d565b5060015b92915050565b60005481565b6001600160a01b0383166000908152600260209081526040808320338452909152812054600019146103db576001600160a01b03841660009081526002602090815260408083203384529091529020546103b6908363ffffffff6107bf16565b6001600160a01b03851660009081526002602090815260408083203384529091529020555b6103e684848461080f565b5060019392505050565b7f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c981565b601281565b60035481565b60016020526000908152604090205481565b60046020526000908152604090205481565b604051806040016040528060038152602001620736c760ec1b81525081565b600061034633848461080f565b60405146908060526109198239604080519182900360520182208282018252600d83526c536169746153776170204c507360981b6020938401528151808301835260018152603160f81b908401528151808401919091527f1651e190aacb4c4c6e236d176db06acca329adaed8d7377e08d89572632a33ba818301527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc66060820152608081018590523060a0808301919091528251808303909101815260c090910190915280519101206003555042851015610587576040805162461bcd60e51b815260206004820152601260248201527114d85a5d1854ddd85c0e881156141254915160721b604482015290519081900360640190fd5b6003546001600160a01b03808a1660008181526004602090815260408083208054600180820190925582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98186015280840196909652958e166060860152608085018d905260a085019590955260c08085018c90528151808603909101815260e08501825280519083012061190160f01b6101008601526101028501969096526101228085019690965280518085039096018652610142840180825286519683019690962095839052610162840180825286905260ff8a166101828501526101a284018990526101c28401889052519193926101e280820193601f1981019281900390910190855afa1580156106a2573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106d85750896001600160a01b0316816001600160a01b0316145b610729576040805162461bcd60e51b815260206004820152601c60248201527f5361697461537761703a20494e56414c49445f5349474e415455524500000000604482015290519081900360640190fd5b6107348a8a8a61075d565b50505050505050505050565b600260209081526000928352604080842090915290825290205481565b6001600160a01b03808416600081815260026020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b8082038281111561034a576040805162461bcd60e51b815260206004820152601560248201527464732d6d6174682d7375622d756e646572666c6f7760581b604482015290519081900360640190fd5b6001600160a01b038316600090815260016020526040902054610838908263ffffffff6107bf16565b6001600160a01b03808516600090815260016020526040808220939093559084168152205461086d908263ffffffff6108c916565b6001600160a01b0380841660008181526001602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b8082018281101561034a576040805162461bcd60e51b815260206004820152601460248201527364732d6d6174682d6164642d6f766572666c6f7760601b604482015290519081900360640190fdfe454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429a265627a7a723158205838230347799f5ef4076636f11bb24e7d6e88863657aa72f16d25735f1ba6aa64736f6c63430005100032",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xCF JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3644E515 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0x95D89B41 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25B JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x263 JUMPI DUP1 PUSH4 0xD505ACCF EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x2E2 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x3644E515 EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7ECEBE00 EQ PUSH2 0x235 JUMPI PUSH2 0xCF JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xD4 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x191 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x1AB JUMPI DUP1 PUSH4 0x30ADF81F EQ PUSH2 0x1E1 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1E9 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xDC PUSH2 0x310 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x20 DUP1 DUP3 MSTORE DUP4 MLOAD DUP2 DUP4 ADD MSTORE DUP4 MLOAD SWAP2 SWAP3 DUP4 SWAP3 SWAP1 DUP4 ADD SWAP2 DUP6 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x116 JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0xFE JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0x143 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x167 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x350 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x60 DUP2 LT ISZERO PUSH2 0x1C1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 ADD CALLDATALOAD PUSH2 0x356 JUMP JUMPDEST PUSH2 0x199 PUSH2 0x3F0 JUMP JUMPDEST PUSH2 0x1F1 PUSH2 0x414 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xFF SWAP1 SWAP3 AND DUP3 MSTORE MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 RETURN JUMPDEST PUSH2 0x199 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x41F JUMP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x24B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x431 JUMP JUMPDEST PUSH2 0xDC PUSH2 0x443 JUMP JUMPDEST PUSH2 0x17D PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x279 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD AND SWAP1 PUSH1 0x20 ADD CALLDATALOAD PUSH2 0x462 JUMP JUMPDEST PUSH2 0x2E0 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0xE0 DUP2 LT ISZERO PUSH2 0x2A5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 DUP2 ADD CALLDATALOAD SWAP1 SWAP2 AND SWAP1 PUSH1 0x40 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xFF PUSH1 0x80 DUP3 ADD CALLDATALOAD AND SWAP1 PUSH1 0xA0 DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0xC0 ADD CALLDATALOAD PUSH2 0x46F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x199 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x40 DUP2 LT ISZERO PUSH2 0x2F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 CALLDATALOAD DUP2 AND SWAP2 PUSH1 0x20 ADD CALLDATALOAD AND PUSH2 0x740 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xD DUP2 MSTORE PUSH1 0x20 ADD PUSH13 0x536169746153776170204C5073 PUSH1 0x98 SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 DUP5 PUSH2 0x75D JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SLOAD PUSH1 0x0 NOT EQ PUSH2 0x3DB JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD PUSH2 0x3B6 SWAP1 DUP4 PUSH4 0xFFFFFFFF PUSH2 0x7BF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SSTORE JUMPDEST PUSH2 0x3E6 DUP5 DUP5 DUP5 PUSH2 0x80F JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 JUMP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x736C7 PUSH1 0xEC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x346 CALLER DUP5 DUP5 PUSH2 0x80F JUMP JUMPDEST PUSH1 0x40 MLOAD CHAINID SWAP1 DUP1 PUSH1 0x52 PUSH2 0x919 DUP3 CODECOPY PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 SWAP1 SUB PUSH1 0x52 ADD DUP3 KECCAK256 DUP3 DUP3 ADD DUP3 MSTORE PUSH1 0xD DUP4 MSTORE PUSH13 0x536169746153776170204C5073 PUSH1 0x98 SHL PUSH1 0x20 SWAP4 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP4 ADD DUP4 MSTORE PUSH1 0x1 DUP2 MSTORE PUSH1 0x31 PUSH1 0xF8 SHL SWAP1 DUP5 ADD MSTORE DUP2 MLOAD DUP1 DUP5 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH32 0x1651E190AACB4C4C6E236D176DB06ACCA329ADAED8D7377E08D89572632A33BA DUP2 DUP4 ADD MSTORE PUSH32 0xC89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6 PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE ADDRESS PUSH1 0xA0 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD DUP1 DUP4 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xC0 SWAP1 SWAP2 ADD SWAP1 SWAP2 MSTORE DUP1 MLOAD SWAP2 ADD KECCAK256 PUSH1 0x3 SSTORE POP TIMESTAMP DUP6 LT ISZERO PUSH2 0x587 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x14D85A5D1854DDD85C0E8811561412549151 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP1 DUP3 ADD SWAP1 SWAP3 SSTORE DUP3 MLOAD PUSH32 0x6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9 DUP2 DUP7 ADD MSTORE DUP1 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE SWAP6 DUP15 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x80 DUP6 ADD DUP14 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD SWAP6 SWAP1 SWAP6 MSTORE PUSH1 0xC0 DUP1 DUP6 ADD DUP13 SWAP1 MSTORE DUP2 MLOAD DUP1 DUP7 SUB SWAP1 SWAP2 ADD DUP2 MSTORE PUSH1 0xE0 DUP6 ADD DUP3 MSTORE DUP1 MLOAD SWAP1 DUP4 ADD KECCAK256 PUSH2 0x1901 PUSH1 0xF0 SHL PUSH2 0x100 DUP7 ADD MSTORE PUSH2 0x102 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH2 0x122 DUP1 DUP6 ADD SWAP7 SWAP1 SWAP7 MSTORE DUP1 MLOAD DUP1 DUP6 SUB SWAP1 SWAP7 ADD DUP7 MSTORE PUSH2 0x142 DUP5 ADD DUP1 DUP3 MSTORE DUP7 MLOAD SWAP7 DUP4 ADD SWAP7 SWAP1 SWAP7 KECCAK256 SWAP6 DUP4 SWAP1 MSTORE PUSH2 0x162 DUP5 ADD DUP1 DUP3 MSTORE DUP7 SWAP1 MSTORE PUSH1 0xFF DUP11 AND PUSH2 0x182 DUP6 ADD MSTORE PUSH2 0x1A2 DUP5 ADD DUP10 SWAP1 MSTORE PUSH2 0x1C2 DUP5 ADD DUP9 SWAP1 MSTORE MLOAD SWAP2 SWAP4 SWAP3 PUSH2 0x1E2 DUP1 DUP3 ADD SWAP4 PUSH1 0x1F NOT DUP2 ADD SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 DUP6 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x6A2 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD PUSH1 0x1F NOT ADD MLOAD SWAP2 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND ISZERO DUP1 ISZERO SWAP1 PUSH2 0x6D8 JUMPI POP DUP10 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ JUMPDEST PUSH2 0x729 JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5361697461537761703A20494E56414C49445F5349474E415455524500000000 PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH2 0x734 DUP11 DUP11 DUP11 PUSH2 0x75D JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE DUP2 MLOAD DUP6 DUP2 MSTORE SWAP2 MLOAD PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP3 DUP2 SWAP1 SUB SWAP1 SWAP2 ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 SUB DUP3 DUP2 GT ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x64732D6D6174682D7375622D756E646572666C6F77 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x838 SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x7BF AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP1 DUP5 AND DUP2 MSTORE KECCAK256 SLOAD PUSH2 0x86D SWAP1 DUP3 PUSH4 0xFFFFFFFF PUSH2 0x8C9 AND JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP5 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SWAP5 SWAP1 SWAP5 SSTORE DUP1 MLOAD DUP6 DUP2 MSTORE SWAP1 MLOAD SWAP2 SWAP4 SWAP3 DUP8 AND SWAP3 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP3 SWAP2 DUP3 SWAP1 SUB ADD SWAP1 LOG3 POP POP POP JUMP JUMPDEST DUP1 DUP3 ADD DUP3 DUP2 LT ISZERO PUSH2 0x34A JUMPI PUSH1 0x40 DUP1 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x64732D6D6174682D6164642D6F766572666C6F77 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE SWAP1 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x64 ADD SWAP1 REVERT INVALID GASLIMIT 0x49 POP CALLDATACOPY BALANCE ORIGIN DIFFICULTY PUSH16 0x6D61696E28737472696E67206E616D65 0x2C PUSH20 0x7472696E672076657273696F6E2C75696E743235 CALLDATASIZE KECCAK256 PUSH4 0x6861696E 0x49 PUSH5 0x2C61646472 PUSH6 0x737320766572 PUSH10 0x6679696E67436F6E7472 PUSH2 0x6374 0x29 LOG2 PUSH6 0x627A7A723158 KECCAK256 PC CODESIZE 0x23 SUB SELFBALANCE PUSH26 0x9F5EF4076636F11BB24E7D6E88863657AA72F16D25735F1BA6AA PUSH5 0x736F6C6343 STOP SDIV LT STOP ORIGIN ",
							"sourceMap": "144:3803:0:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;144:3803:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;223:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;223:45:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2682:144;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2682:144:0;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;358:24;;;:::i;:::-;;;;;;;;;;;;;;;;2974:295;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2974:295:0;;;;;;;;;;;;;;;;;:::i;644:108::-;;;:::i;317:35::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;503:31;;;:::i;388:41::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;388:41:0;-1:-1:-1;;;;;388:41:0;;:::i;758:38::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;758:38:0;-1:-1:-1;;;;;758:38:0;;:::i;274:37::-;;;:::i;2832:136::-;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2832:136:0;;;;;;;;:::i;3275:670::-;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;-1:-1;;;;;;3275:670:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;435:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;435:61:0;;;;;;;;;;:::i;223:45::-;;;;;;;;;;;;;;-1:-1:-1;;;223:45:0;;;;:::o;2682:144::-;2746:4;2762:36;2771:10;2783:7;2792:5;2762:8;:36::i;:::-;-1:-1:-1;2815:4:0;2682:144;;;;;:::o;358:24::-;;;;:::o;2974:295::-;-1:-1:-1;;;;;3072:15:0;;3052:4;3072:15;;;:9;:15;;;;;;;;3088:10;3072:27;;;;;;;;-1:-1:-1;;3072:39:0;3068:138;;-1:-1:-1;;;;;3157:15:0;;;;;;:9;:15;;;;;;;;3173:10;3157:27;;;;;;;;:38;;3189:5;3157:38;:31;:38;:::i;:::-;-1:-1:-1;;;;;3127:15:0;;;;;;:9;:15;;;;;;;;3143:10;3127:27;;;;;;;:68;3068:138;3215:26;3225:4;3231:2;3235:5;3215:9;:26::i;:::-;-1:-1:-1;3258:4:0;2974:295;;;;;:::o;644:108::-;686:66;644:108;:::o;317:35::-;350:2;317:35;:::o;503:31::-;;;;:::o;388:41::-;;;;;;;;;;;;;:::o;758:38::-;;;;;;;;;;;;;:::o;274:37::-;;;;;;;;;;;;;;-1:-1:-1;;;274:37:0;;;;:::o;2832:136::-;2892:4;2908:32;2918:10;2930:2;2934:5;2908:9;:32::i;3275:670::-;1140:95;;1044:7;;1140:95;;;;;;;;;;;;;;;;1269:4;;;;;;;;-1:-1:-1;;;1269:4:0;;;;;1303:10;;;;;;;;;;-1:-1:-1;;;1303:10:0;;;;1112:272;;;;;;;;;1253:22;1112:272;;;;1293:21;1112:272;;;;;;;;;;1365:4;1112:272;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;1112:272:0;;;;;;;1089:305;;;;;1070:16;:324;-1:-1:-1;3428:15:0;3416:27;;;3408:58;;;;;-1:-1:-1;;;3408:58:0;;;;;;;;;;;;-1:-1:-1;;;3408:58:0;;;;;;;;;;;;;;;3578:16;;-1:-1:-1;;;;;3673:13:0;;;3476:14;3673:13;;;:6;:13;;;;;;;;:15;;;;;;;;;3622:77;;686:66;3622:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3622:77:0;;;;;3612:88;;;;;;-1:-1:-1;;;3516:198:0;;;;;;;;;;;;;;;;;;;;;26:21:-1;;;22:32;;;6:49;;3516:198:0;;;;;;3493:231;;;;;;;;;3761:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3476:14;;3673:15;3761:26;;;;;-1:-1:-1;;3761:26:0;;;;;;;;;;3673:15;3761:26;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;-1:-1;;3761:26:0;;-1:-1:-1;;3761:26:0;;;-1:-1:-1;;;;;;;3805:30:0;;;;;;:59;;;3859:5;-1:-1:-1;;;;;3839:25:0;:16;-1:-1:-1;;;;;3839:25:0;;3805:59;3797:100;;;;;-1:-1:-1;;;3797:100:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;3907:31;3916:5;3923:7;3932:5;3907:8;:31::i;:::-;1404:1;;3275:670;;;;;;;;:::o;435:61::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;2288:166::-;-1:-1:-1;;;;;2368:16:0;;;;;;;:9;:16;;;;;;;;:25;;;;;;;;;;;;;:33;;;2416:31;;;;;;;;;;;;;;;;;2288:166;;;:::o;288:127:2:-;371:5;;;366:16;;;;358:50;;;;;-1:-1:-1;;;358:50:2;;;;;;;;;;;;-1:-1:-1;;;358:50:2;;;;;;;;;;;;;;2460:216:0;-1:-1:-1;;;;;2553:15:0;;;;;;:9;:15;;;;;;:26;;2573:5;2553:26;:19;:26;:::i;:::-;-1:-1:-1;;;;;2535:15:0;;;;;;;:9;:15;;;;;;:44;;;;2605:13;;;;;;;:24;;2623:5;2605:24;:17;:24;:::i;:::-;-1:-1:-1;;;;;2589:13:0;;;;;;;:9;:13;;;;;;;;;:40;;;;2644:25;;;;;;;2589:13;;2644:25;;;;;;;;;;;;;2460:216;;;:::o;156:126:2:-;239:5;;;234:16;;;;226:49;;;;;-1:-1:-1;;;226:49:2;;;;;;;;;;;;-1:-1:-1;;;226:49:2;;;;;;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "492600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DOMAIN_SEPARATOR()": "1021",
								"PERMIT_TYPEHASH()": "287",
								"allowance(address,address)": "1305",
								"approve(address,uint256)": "22343",
								"balanceOf(address)": "1169",
								"decimals()": "318",
								"name()": "infinite",
								"nonces(address)": "1191",
								"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "1043",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							},
							"internal": {
								"_approve(address,address,uint256)": "infinite",
								"_burn(address,uint256)": "infinite",
								"_mint(address,uint256)": "infinite",
								"_transfer(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 144,
									"end": 3947,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "MSTORE"
								},
								{
									"begin": 1418,
									"end": 1868,
									"name": "CALLVALUE"
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI"
								},
								{
									"begin": 30,
									"end": 31,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 27,
									"end": 28,
									"name": "DUP1"
								},
								{
									"begin": 20,
									"end": 32,
									"name": "REVERT"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "MLOAD"
								},
								{
									"begin": 1511,
									"end": 1518,
									"name": "CHAINID"
								},
								{
									"begin": 1511,
									"end": 1518,
									"name": "SWAP1"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "DUP1"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "PUSH data",
									"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "DUP3"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "CODECOPY"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "DUP1"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "MLOAD"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "SWAP2"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "DUP3"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "SWAP1"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "SUB"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "PUSH",
									"value": "52"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "ADD"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "DUP3"
								},
								{
									"begin": 1607,
									"end": 1702,
									"name": "KECCAK256"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "DUP3"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "DUP3"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "ADD"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "DUP3"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "MSTORE"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "PUSH",
									"value": "D"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "DUP4"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "536169746153776170204C5073"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "98"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "PUSH",
									"value": "20"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "SWAP4"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "DUP5"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "ADD"
								},
								{
									"begin": 1736,
									"end": 1740,
									"name": "MSTORE"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "DUP2"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "MLOAD"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "DUP1"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "DUP4"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "ADD"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "DUP4"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "MSTORE"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "DUP2"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "MSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "31"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"value": "F8"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "SWAP1"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "DUP5"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "ADD"
								},
								{
									"begin": 1770,
									"end": 1780,
									"name": "MSTORE"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP2"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "MLOAD"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP1"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP5"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "ADD"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP2"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP1"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP2"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "MSTORE"
								},
								{
									"begin": 1720,
									"end": 1742,
									"name": "PUSH",
									"value": "1651E190AACB4C4C6E236D176DB06ACCA329ADAED8D7377E08D89572632A33BA"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP2"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP4"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "ADD"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "MSTORE"
								},
								{
									"begin": 1760,
									"end": 1781,
									"name": "PUSH",
									"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "PUSH",
									"value": "60"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP3"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "ADD"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "MSTORE"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP2"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "ADD"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP5"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP1"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP5"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "MSTORE"
								},
								{
									"begin": 1832,
									"end": 1836,
									"name": "ADDRESS"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "PUSH",
									"value": "A0"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP1"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP7"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "ADD"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP2"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP1"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP2"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "MSTORE"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "DUP2"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "MLOAD"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "DUP7"
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP1"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SWAP2"
								},
								{
									"begin": 22,
									"end": 54,
									"name": "ADD"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "DUP2"
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "PUSH",
									"value": "C0"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP1"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP5"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "ADD"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "SWAP1"
								},
								{
									"begin": 1579,
									"end": 1851,
									"name": "MSTORE"
								},
								{
									"begin": 1556,
									"end": 1861,
									"name": "DUP3"
								},
								{
									"begin": 1556,
									"end": 1861,
									"name": "MLOAD"
								},
								{
									"begin": 1556,
									"end": 1861,
									"name": "SWAP3"
								},
								{
									"begin": 1556,
									"end": 1861,
									"name": "ADD"
								},
								{
									"begin": 1556,
									"end": 1861,
									"name": "SWAP2"
								},
								{
									"begin": 1556,
									"end": 1861,
									"name": "SWAP1"
								},
								{
									"begin": 1556,
									"end": 1861,
									"name": "SWAP2"
								},
								{
									"begin": 1556,
									"end": 1861,
									"name": "KECCAK256"
								},
								{
									"begin": 1537,
									"end": 1553,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 1537,
									"end": 1861,
									"name": "SSTORE"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "DUP1"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "CODECOPY"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 144,
									"end": 3947,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a723158205838230347799f5ef4076636f11bb24e7d6e88863657aa72f16d25735f1ba6aa64736f6c63430005100032",
									".code": [
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "MSTORE"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "POP"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "LT"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "SHR"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "GT"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "GT"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "95D89B41"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "A9059CBB"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "D505ACCF"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "DD62ED3E"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMP"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "3644E515"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "70A08231"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "7ECEBE00"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMP"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "6FDDE03"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "95EA7B3"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "18160DDD"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "23B872DD"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "30ADF81F"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "313CE567"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "EQ"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPI"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "JUMPDEST"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "DUP1"
										},
										{
											"begin": 144,
											"end": 3947,
											"name": "REVERT"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP4"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP4"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP4"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP3"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP4"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP3"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP4"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP6"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP4"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP4"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP4"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "LT"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPI"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "DUP2"
										},
										{
											"begin": 90,
											"end": 101,
											"name": "ADD"
										},
										{
											"begin": 84,
											"end": 102,
											"name": "MLOAD"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP4"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "DUP3"
										},
										{
											"begin": 71,
											"end": 82,
											"name": "ADD"
										},
										{
											"begin": 64,
											"end": 103,
											"name": "MSTORE"
										},
										{
											"begin": 52,
											"end": 54,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 45,
											"end": 55,
											"name": "ADD"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMP"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 8,
											"end": 108,
											"name": "JUMPDEST"
										},
										{
											"begin": 12,
											"end": 26,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "AND"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "ISZERO"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "JUMPI"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP3"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP4"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "EXP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "NOT"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "AND"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP3"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SUB"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "SWAP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "RETURN"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "JUMPDEST"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "DUP1"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "25"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "DUP2"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "AND"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "ADD"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "tag",
											"value": "24"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "JUMPDEST"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "DUP1"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "MLOAD"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SWAP2"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "ISZERO"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "ISZERO"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "DUP3"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "MSTORE"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "MLOAD"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "DUP2"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SUB"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "ADD"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SWAP1"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "RETURN"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH [tag]",
											"value": "28"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP2"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "RETURN"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "JUMPDEST"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "DUP1"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "30"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "DUP2"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "DUP2"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "AND"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "SWAP2"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "DUP2"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "ADD"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "SWAP1"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "SWAP2"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "AND"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "SWAP1"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "ADD"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "PUSH [tag]",
											"value": "31"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "JUMPDEST"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "PUSH [tag]",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPDEST"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH [tag]",
											"value": "34"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH [tag]",
											"value": "35"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "tag",
											"value": "34"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPDEST"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "DUP1"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "MLOAD"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP3"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "AND"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "DUP3"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "MSTORE"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "MLOAD"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "DUP2"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SUB"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "ADD"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "SWAP1"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "RETURN"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "PUSH [tag]",
											"value": "37"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "JUMPDEST"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "DUP1"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "39"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "AND"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "PUSH [tag]",
											"value": "40"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "JUMPDEST"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "DUP1"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "42"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "CALLDATALOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "AND"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "PUSH [tag]",
											"value": "43"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "PUSH [tag]",
											"value": "45"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "JUMPDEST"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "PUSH [tag]",
											"value": "24"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "DUP1"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "51"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "DUP2"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "AND"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "SWAP1"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "ADD"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "PUSH [tag]",
											"value": "52"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "JUMPDEST"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH [tag]",
											"value": "53"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "DUP1"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 16,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 17,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "54"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "DUP2"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "DUP2"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "AND"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SWAP2"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "DUP2"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "ADD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SWAP1"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SWAP2"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "AND"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SWAP1"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "DUP2"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "ADD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SWAP1"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "DUP2"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "ADD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SWAP1"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "DUP3"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "ADD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "AND"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SWAP1"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "DUP2"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "ADD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "SWAP1"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "ADD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "PUSH [tag]",
											"value": "55"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "tag",
											"value": "53"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "JUMPDEST"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "STOP"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SUB"
										},
										{
											"begin": 13,
											"end": 15,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 8,
											"end": 11,
											"name": "DUP2"
										},
										{
											"begin": 5,
											"end": 16,
											"name": "LT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI"
										},
										{
											"begin": 29,
											"end": 30,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 27,
											"name": "DUP1"
										},
										{
											"begin": 19,
											"end": 31,
											"name": "REVERT"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"value": "57"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP2"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP2"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "AND"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SWAP2"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "ADD"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "AND"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "PUSH [tag]",
											"value": "58"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "JUMPDEST"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MLOAD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP1"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "536169746153776170204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "MSTORE"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "POP"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "DUP2"
										},
										{
											"begin": 223,
											"end": 268,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "JUMPDEST"
										},
										{
											"begin": 2746,
											"end": 2750,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2762,
											"end": 2798,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2771,
											"end": 2781,
											"name": "CALLER"
										},
										{
											"begin": 2783,
											"end": 2790,
											"name": "DUP5"
										},
										{
											"begin": 2792,
											"end": 2797,
											"name": "DUP5"
										},
										{
											"begin": 2762,
											"end": 2770,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 2762,
											"end": 2798,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2762,
											"end": 2798,
											"name": "tag",
											"value": "60"
										},
										{
											"begin": 2762,
											"end": 2798,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 2815,
											"end": 2819,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "tag",
											"value": "59"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "JUMPDEST"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SWAP3"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "SWAP2"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "POP"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "POP"
										},
										{
											"begin": 2682,
											"end": 2826,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "tag",
											"value": "28"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMPDEST"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "SLOAD"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 382,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "tag",
											"value": "31"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "DUP4"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "AND"
										},
										{
											"begin": 3052,
											"end": 3056,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "SWAP1"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "DUP2"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "MSTORE"
										},
										{
											"begin": 3072,
											"end": 3081,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "SWAP1"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "DUP2"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "MSTORE"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "DUP1"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "DUP4"
										},
										{
											"begin": 3072,
											"end": 3087,
											"name": "KECCAK256"
										},
										{
											"begin": 3088,
											"end": 3098,
											"name": "CALLER"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "DUP5"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "MSTORE"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "SWAP1"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "SWAP2"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "MSTORE"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "DUP2"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "KECCAK256"
										},
										{
											"begin": 3072,
											"end": 3099,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3072,
											"end": 3111,
											"name": "EQ"
										},
										{
											"begin": 3068,
											"end": 3206,
											"name": "PUSH [tag]",
											"value": "63"
										},
										{
											"begin": 3068,
											"end": 3206,
											"name": "JUMPI"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "DUP5"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "AND"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "SWAP1"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3166,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "SWAP1"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "DUP2"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "DUP1"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "DUP4"
										},
										{
											"begin": 3157,
											"end": 3172,
											"name": "KECCAK256"
										},
										{
											"begin": 3173,
											"end": 3183,
											"name": "CALLER"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "DUP5"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "SWAP1"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "SWAP2"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "MSTORE"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "SWAP1"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "KECCAK256"
										},
										{
											"begin": 3157,
											"end": 3184,
											"name": "SLOAD"
										},
										{
											"begin": 3157,
											"end": 3195,
											"name": "PUSH [tag]",
											"value": "64"
										},
										{
											"begin": 3157,
											"end": 3195,
											"name": "SWAP1"
										},
										{
											"begin": 3189,
											"end": 3194,
											"name": "DUP4"
										},
										{
											"begin": 3157,
											"end": 3195,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 3157,
											"end": 3188,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 3157,
											"end": 3195,
											"name": "AND"
										},
										{
											"begin": 3157,
											"end": 3195,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3157,
											"end": 3195,
											"name": "tag",
											"value": "64"
										},
										{
											"begin": 3157,
											"end": 3195,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "DUP6"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "AND"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "DUP2"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "MSTORE"
										},
										{
											"begin": 3127,
											"end": 3136,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "DUP2"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "MSTORE"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "DUP1"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "DUP4"
										},
										{
											"begin": 3127,
											"end": 3142,
											"name": "KECCAK256"
										},
										{
											"begin": 3143,
											"end": 3153,
											"name": "CALLER"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "DUP5"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "MSTORE"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "SWAP2"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "MSTORE"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "SWAP1"
										},
										{
											"begin": 3127,
											"end": 3154,
											"name": "KECCAK256"
										},
										{
											"begin": 3127,
											"end": 3195,
											"name": "SSTORE"
										},
										{
											"begin": 3068,
											"end": 3206,
											"name": "tag",
											"value": "63"
										},
										{
											"begin": 3068,
											"end": 3206,
											"name": "JUMPDEST"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "PUSH [tag]",
											"value": "66"
										},
										{
											"begin": 3225,
											"end": 3229,
											"name": "DUP5"
										},
										{
											"begin": 3231,
											"end": 3233,
											"name": "DUP5"
										},
										{
											"begin": 3235,
											"end": 3240,
											"name": "DUP5"
										},
										{
											"begin": 3215,
											"end": 3224,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "tag",
											"value": "66"
										},
										{
											"begin": 3215,
											"end": 3241,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3258,
											"end": 3262,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "SWAP4"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "SWAP3"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "POP"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "POP"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "POP"
										},
										{
											"begin": 2974,
											"end": 3269,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "tag",
											"value": "33"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "JUMPDEST"
										},
										{
											"begin": 686,
											"end": 752,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 644,
											"end": 752,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "tag",
											"value": "35"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMPDEST"
										},
										{
											"begin": 350,
											"end": 352,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "DUP2"
										},
										{
											"begin": 317,
											"end": 352,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "tag",
											"value": "37"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "JUMPDEST"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "SLOAD"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "DUP2"
										},
										{
											"begin": 503,
											"end": 534,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "tag",
											"value": "40"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "JUMPDEST"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "MSTORE"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "SWAP1"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "DUP2"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "MSTORE"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "SWAP1"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "KECCAK256"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "SLOAD"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "DUP2"
										},
										{
											"begin": 388,
											"end": 429,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "tag",
											"value": "43"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "JUMPDEST"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "MSTORE"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "DUP2"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "MSTORE"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "SWAP1"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "KECCAK256"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "SLOAD"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "DUP2"
										},
										{
											"begin": 758,
											"end": 796,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "tag",
											"value": "45"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "JUMPDEST"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "MLOAD"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "DUP1"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "ADD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "736C7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "EC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "MSTORE"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "POP"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "DUP2"
										},
										{
											"begin": 274,
											"end": 311,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "tag",
											"value": "52"
										},
										{
											"begin": 2832,
											"end": 2968,
											"name": "JUMPDEST"
										},
										{
											"begin": 2892,
											"end": 2896,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2908,
											"end": 2940,
											"name": "PUSH [tag]",
											"value": "60"
										},
										{
											"begin": 2918,
											"end": 2928,
											"name": "CALLER"
										},
										{
											"begin": 2930,
											"end": 2932,
											"name": "DUP5"
										},
										{
											"begin": 2934,
											"end": 2939,
											"name": "DUP5"
										},
										{
											"begin": 2908,
											"end": 2917,
											"name": "PUSH [tag]",
											"value": "67"
										},
										{
											"begin": 2908,
											"end": 2940,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "tag",
											"value": "55"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "JUMPDEST"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "MLOAD"
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "CHAINID"
										},
										{
											"begin": 1044,
											"end": 1051,
											"name": "SWAP1"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "PUSH",
											"value": "52"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "PUSH data",
											"value": "8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "DUP3"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "CODECOPY"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "DUP1"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "MLOAD"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "SWAP2"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "DUP3"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "SWAP1"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "SUB"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "PUSH",
											"value": "52"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "ADD"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "DUP3"
										},
										{
											"begin": 1140,
											"end": 1235,
											"name": "KECCAK256"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "DUP3"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "DUP3"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "ADD"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "DUP3"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "MSTORE"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "PUSH",
											"value": "D"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "DUP4"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "536169746153776170204C5073"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "98"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "SWAP4"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "DUP5"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "ADD"
										},
										{
											"begin": 1269,
											"end": 1273,
											"name": "MSTORE"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "DUP2"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "MLOAD"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "DUP1"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "DUP4"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "DUP4"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "MSTORE"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "DUP2"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "31"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "SWAP1"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "DUP5"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "ADD"
										},
										{
											"begin": 1303,
											"end": 1313,
											"name": "MSTORE"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "MLOAD"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP1"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP5"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "MSTORE"
										},
										{
											"begin": 1253,
											"end": 1275,
											"name": "PUSH",
											"value": "1651E190AACB4C4C6E236D176DB06ACCA329ADAED8D7377E08D89572632A33BA"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP4"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "MSTORE"
										},
										{
											"begin": 1293,
											"end": 1314,
											"name": "PUSH",
											"value": "C89EFDAA54C0F20C7ADF612882DF0950F5A951637E0307CDCB4C672F298B8BC6"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP3"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "MSTORE"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP6"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "MSTORE"
										},
										{
											"begin": 1365,
											"end": 1369,
											"name": "ADDRESS"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP1"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP4"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "MSTORE"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "DUP3"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP4"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "ADD"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP1"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "SWAP2"
										},
										{
											"begin": 1112,
											"end": 1384,
											"name": "MSTORE"
										},
										{
											"begin": 1089,
											"end": 1394,
											"name": "DUP1"
										},
										{
											"begin": 1089,
											"end": 1394,
											"name": "MLOAD"
										},
										{
											"begin": 1089,
											"end": 1394,
											"name": "SWAP2"
										},
										{
											"begin": 1089,
											"end": 1394,
											"name": "ADD"
										},
										{
											"begin": 1089,
											"end": 1394,
											"name": "KECCAK256"
										},
										{
											"begin": 1070,
											"end": 1086,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 1070,
											"end": 1394,
											"name": "SSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3428,
											"end": 3443,
											"name": "TIMESTAMP"
										},
										{
											"begin": 3416,
											"end": 3443,
											"name": "DUP6"
										},
										{
											"begin": 3416,
											"end": 3443,
											"name": "LT"
										},
										{
											"begin": 3416,
											"end": 3443,
											"name": "ISZERO"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "PUSH [tag]",
											"value": "72"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "JUMPI"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "DUP1"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "DUP2"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "MSTORE"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "DUP3"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "MSTORE"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "PUSH",
											"value": "12"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "DUP3"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "14D85A5D1854DDD85C0E8811561412549151"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "DUP3"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "MSTORE"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "MLOAD"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "DUP2"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "SUB"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "ADD"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "SWAP1"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "REVERT"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "tag",
											"value": "72"
										},
										{
											"begin": 3408,
											"end": 3466,
											"name": "JUMPDEST"
										},
										{
											"begin": 3578,
											"end": 3594,
											"name": "PUSH",
											"value": "3"
										},
										{
											"begin": 3578,
											"end": 3594,
											"name": "SLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "DUP1"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "DUP11"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "AND"
										},
										{
											"begin": 3476,
											"end": 3490,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "DUP2"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "DUP2"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "MSTORE"
										},
										{
											"begin": 3673,
											"end": 3679,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "SWAP1"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "DUP2"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "MSTORE"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "DUP1"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "DUP4"
										},
										{
											"begin": 3673,
											"end": 3686,
											"name": "KECCAK256"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "SLOAD"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "DUP1"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "DUP3"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "ADD"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "SWAP1"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "SWAP3"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "SSTORE"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP3"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MLOAD"
										},
										{
											"begin": 686,
											"end": 752,
											"name": "PUSH",
											"value": "6E71EDAE12B1B97F4D1F60370FEF10105FA2FAAE0126114A169C64845D6126C9"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP7"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP5"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP7"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP7"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP6"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP15"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "AND"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP7"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP6"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP14"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP6"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP6"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP6"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "PUSH",
											"value": "C0"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP1"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP6"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP13"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "SWAP1"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP2"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP7"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP2"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP2"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "PUSH",
											"value": "E0"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP6"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "ADD"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "DUP3"
										},
										{
											"begin": 3622,
											"end": 3699,
											"name": "MSTORE"
										},
										{
											"begin": 3612,
											"end": 3700,
											"name": "DUP1"
										},
										{
											"begin": 3612,
											"end": 3700,
											"name": "MLOAD"
										},
										{
											"begin": 3612,
											"end": 3700,
											"name": "SWAP1"
										},
										{
											"begin": 3612,
											"end": 3700,
											"name": "DUP4"
										},
										{
											"begin": 3612,
											"end": 3700,
											"name": "ADD"
										},
										{
											"begin": 3612,
											"end": 3700,
											"name": "KECCAK256"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1901"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "F0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "DUP7"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "ADD"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "MSTORE"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "PUSH",
											"value": "102"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "DUP6"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "ADD"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "SWAP7"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "SWAP1"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "SWAP7"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "MSTORE"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "PUSH",
											"value": "122"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "DUP1"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "DUP6"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "ADD"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "SWAP7"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "SWAP1"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "SWAP7"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "MSTORE"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "DUP1"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "MLOAD"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "DUP6"
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP1"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SWAP7"
										},
										{
											"begin": 22,
											"end": 54,
											"name": "ADD"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "DUP7"
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "PUSH",
											"value": "142"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "DUP5"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "ADD"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "DUP1"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "DUP3"
										},
										{
											"begin": 3516,
											"end": 3714,
											"name": "MSTORE"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "DUP7"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "MLOAD"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "SWAP7"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "DUP4"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "ADD"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "SWAP7"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "SWAP1"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "SWAP7"
										},
										{
											"begin": 3493,
											"end": 3724,
											"name": "KECCAK256"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP6"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP4"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MSTORE"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "PUSH",
											"value": "162"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP5"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP1"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP3"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MSTORE"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP7"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MSTORE"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "PUSH",
											"value": "FF"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP11"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "AND"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "PUSH",
											"value": "182"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP6"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MSTORE"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "PUSH",
											"value": "1A2"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP5"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP10"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MSTORE"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "PUSH",
											"value": "1C2"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP5"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP9"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MSTORE"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MLOAD"
										},
										{
											"begin": 3476,
											"end": 3490,
											"name": "SWAP2"
										},
										{
											"begin": 3476,
											"end": 3490,
											"name": "SWAP4"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "SWAP3"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "PUSH",
											"value": "1E2"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP1"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP3"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP2"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP3"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "DUP2"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SUB"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP2"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP1"
										},
										{
											"begin": 3673,
											"end": 3688,
											"name": "DUP6"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "GAS"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "STATICCALL"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "73"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "ADD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "MLOAD"
										},
										{
											"begin": 3761,
											"end": 3787,
											"name": "SWAP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "DUP2"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "AND"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "ISZERO"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "DUP1"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "ISZERO"
										},
										{
											"begin": 3805,
											"end": 3835,
											"name": "SWAP1"
										},
										{
											"begin": 3805,
											"end": 3864,
											"name": "PUSH [tag]",
											"value": "74"
										},
										{
											"begin": 3805,
											"end": 3864,
											"name": "JUMPI"
										},
										{
											"begin": 3805,
											"end": 3864,
											"name": "POP"
										},
										{
											"begin": 3859,
											"end": 3864,
											"name": "DUP10"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3839,
											"end": 3864,
											"name": "AND"
										},
										{
											"begin": 3839,
											"end": 3855,
											"name": "DUP2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 3839,
											"end": 3864,
											"name": "AND"
										},
										{
											"begin": 3839,
											"end": 3864,
											"name": "EQ"
										},
										{
											"begin": 3805,
											"end": 3864,
											"name": "tag",
											"value": "74"
										},
										{
											"begin": 3805,
											"end": 3864,
											"name": "JUMPDEST"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH [tag]",
											"value": "75"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "JUMPI"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "DUP1"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "DUP2"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "MSTORE"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "DUP3"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "ADD"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "MSTORE"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH",
											"value": "1C"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "DUP3"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "ADD"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "MSTORE"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH",
											"value": "5361697461537761703A20494E56414C49445F5349474E415455524500000000"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "DUP3"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "ADD"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "MSTORE"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "SWAP1"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "MLOAD"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "SWAP1"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "DUP2"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "SWAP1"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "SUB"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "ADD"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "SWAP1"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "REVERT"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "tag",
											"value": "75"
										},
										{
											"begin": 3797,
											"end": 3897,
											"name": "JUMPDEST"
										},
										{
											"begin": 3907,
											"end": 3938,
											"name": "PUSH [tag]",
											"value": "76"
										},
										{
											"begin": 3916,
											"end": 3921,
											"name": "DUP11"
										},
										{
											"begin": 3923,
											"end": 3930,
											"name": "DUP11"
										},
										{
											"begin": 3932,
											"end": 3937,
											"name": "DUP11"
										},
										{
											"begin": 3907,
											"end": 3915,
											"name": "PUSH [tag]",
											"value": "61"
										},
										{
											"begin": 3907,
											"end": 3938,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 3907,
											"end": 3938,
											"name": "tag",
											"value": "76"
										},
										{
											"begin": 3907,
											"end": 3938,
											"name": "JUMPDEST"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "POP"
										},
										{
											"begin": 1404,
											"end": 1405,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "POP"
										},
										{
											"begin": 3275,
											"end": 3945,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "tag",
											"value": "58"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "JUMPDEST"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP2"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "MSTORE"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SWAP3"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP4"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "MSTORE"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP1"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP5"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "KECCAK256"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SWAP2"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "MSTORE"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP3"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "MSTORE"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SWAP1"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "KECCAK256"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "SLOAD"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "DUP2"
										},
										{
											"begin": 435,
											"end": 496,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 2288,
											"end": 2454,
											"name": "tag",
											"value": "61"
										},
										{
											"begin": 2288,
											"end": 2454,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "DUP5"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "AND"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "MSTORE"
										},
										{
											"begin": 2368,
											"end": 2377,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "SWAP1"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "DUP2"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "MSTORE"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "DUP1"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "DUP4"
										},
										{
											"begin": 2368,
											"end": 2384,
											"name": "KECCAK256"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "SWAP5"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "DUP8"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "AND"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "DUP1"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "DUP5"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "MSTORE"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "SWAP5"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "DUP3"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "MSTORE"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "SWAP2"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "DUP3"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "SWAP1"
										},
										{
											"begin": 2368,
											"end": 2393,
											"name": "KECCAK256"
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "DUP6"
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "SWAP1"
										},
										{
											"begin": 2368,
											"end": 2401,
											"name": "SSTORE"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP2"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "MLOAD"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP6"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP2"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "MSTORE"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP2"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "MLOAD"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "PUSH",
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP3"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "DUP2"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP1"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SUB"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP1"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP2"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "ADD"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "SWAP1"
										},
										{
											"begin": 2416,
											"end": 2447,
											"name": "LOG3"
										},
										{
											"begin": 2288,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2288,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2288,
											"end": 2454,
											"name": "POP"
										},
										{
											"begin": 2288,
											"end": 2454,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "tag",
											"value": "65"
										},
										{
											"begin": 288,
											"end": 415,
											"name": "JUMPDEST"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DUP1"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "DUP3"
										},
										{
											"begin": 371,
											"end": 376,
											"name": "SUB"
										},
										{
											"begin": 366,
											"end": 382,
											"name": "DUP3"
										},
										{
											"begin": 366,
											"end": 382,
											"name": "DUP2"
										},
										{
											"begin": 366,
											"end": 382,
											"name": "GT"
										},
										{
											"begin": 366,
											"end": 382,
											"name": "ISZERO"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "JUMPI"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "15"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D7375622D756E646572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP3"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MSTORE"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "MLOAD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "DUP2"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SUB"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "ADD"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "SWAP1"
										},
										{
											"begin": 358,
											"end": 408,
											"name": "REVERT"
										},
										{
											"begin": 2460,
											"end": 2676,
											"name": "tag",
											"value": "67"
										},
										{
											"begin": 2460,
											"end": 2676,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "DUP4"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "AND"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "SWAP1"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "DUP2"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "MSTORE"
										},
										{
											"begin": 2553,
											"end": 2562,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "MSTORE"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "SWAP1"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "KECCAK256"
										},
										{
											"begin": 2553,
											"end": 2568,
											"name": "SLOAD"
										},
										{
											"begin": 2553,
											"end": 2579,
											"name": "PUSH [tag]",
											"value": "81"
										},
										{
											"begin": 2553,
											"end": 2579,
											"name": "SWAP1"
										},
										{
											"begin": 2573,
											"end": 2578,
											"name": "DUP3"
										},
										{
											"begin": 2553,
											"end": 2579,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2553,
											"end": 2572,
											"name": "PUSH [tag]",
											"value": "65"
										},
										{
											"begin": 2553,
											"end": 2579,
											"name": "AND"
										},
										{
											"begin": 2553,
											"end": 2579,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2553,
											"end": 2579,
											"name": "tag",
											"value": "81"
										},
										{
											"begin": 2553,
											"end": 2579,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "DUP1"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "DUP6"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "AND"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "SWAP1"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "DUP2"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2544,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "MSTORE"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "DUP1"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "DUP3"
										},
										{
											"begin": 2535,
											"end": 2550,
											"name": "KECCAK256"
										},
										{
											"begin": 2535,
											"end": 2579,
											"name": "SWAP4"
										},
										{
											"begin": 2535,
											"end": 2579,
											"name": "SWAP1"
										},
										{
											"begin": 2535,
											"end": 2579,
											"name": "SWAP4"
										},
										{
											"begin": 2535,
											"end": 2579,
											"name": "SSTORE"
										},
										{
											"begin": 2605,
											"end": 2618,
											"name": "SWAP1"
										},
										{
											"begin": 2605,
											"end": 2618,
											"name": "DUP5"
										},
										{
											"begin": 2605,
											"end": 2618,
											"name": "AND"
										},
										{
											"begin": 2605,
											"end": 2618,
											"name": "DUP2"
										},
										{
											"begin": 2605,
											"end": 2618,
											"name": "MSTORE"
										},
										{
											"begin": 2605,
											"end": 2618,
											"name": "KECCAK256"
										},
										{
											"begin": 2605,
											"end": 2618,
											"name": "SLOAD"
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "PUSH [tag]",
											"value": "82"
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "SWAP1"
										},
										{
											"begin": 2623,
											"end": 2628,
											"name": "DUP3"
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 2605,
											"end": 2622,
											"name": "PUSH [tag]",
											"value": "83"
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "AND"
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "JUMP",
											"value": "[in]"
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "tag",
											"value": "82"
										},
										{
											"begin": 2605,
											"end": 2629,
											"name": "JUMPDEST"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "DUP1"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "DUP5"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "AND"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "DUP2"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "DUP2"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "MSTORE"
										},
										{
											"begin": 2589,
											"end": 2598,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "SWAP1"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "DUP2"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "MSTORE"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "SWAP2"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "DUP3"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "SWAP1"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "KECCAK256"
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SWAP5"
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SWAP1"
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SWAP5"
										},
										{
											"begin": 2589,
											"end": 2629,
											"name": "SSTORE"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "DUP1"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "MLOAD"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "DUP6"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "DUP2"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "MSTORE"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "SWAP1"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "MLOAD"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "SWAP2"
										},
										{
											"begin": 2589,
											"end": 2602,
											"name": "SWAP4"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "SWAP3"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "DUP8"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "AND"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "SWAP3"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "PUSH",
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "SWAP3"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "SWAP2"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "DUP3"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "SWAP1"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "SUB"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "ADD"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "SWAP1"
										},
										{
											"begin": 2644,
											"end": 2669,
											"name": "LOG3"
										},
										{
											"begin": 2460,
											"end": 2676,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2676,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2676,
											"name": "POP"
										},
										{
											"begin": 2460,
											"end": 2676,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "tag",
											"value": "83"
										},
										{
											"begin": 156,
											"end": 282,
											"name": "JUMPDEST"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "DUP1"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "DUP3"
										},
										{
											"begin": 239,
											"end": 244,
											"name": "ADD"
										},
										{
											"begin": 234,
											"end": 250,
											"name": "DUP3"
										},
										{
											"begin": 234,
											"end": 250,
											"name": "DUP2"
										},
										{
											"begin": 234,
											"end": 250,
											"name": "LT"
										},
										{
											"begin": 234,
											"end": 250,
											"name": "ISZERO"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH [tag]",
											"value": "59"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "JUMPI"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MLOAD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "14"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "24"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "64732D6D6174682D6164642D6F766572666C6F77"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "44"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP3"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MSTORE"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "MLOAD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "DUP2"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SUB"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "PUSH",
											"value": "64"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "ADD"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "SWAP1"
										},
										{
											"begin": 226,
											"end": 275,
											"name": "REVERT"
										}
									],
									".data": {
										"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
									}
								},
								"8B73C3C69BB8FE3D512ECC4CF759CC79239F7B179B0FFACAA9A75D522B39400F": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429"
							}
						},
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/SaitaSwapERC20.sol\":\"SaitaSwapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/SaitaSwapERC20.sol\":{\"keccak256\":\"0x196fc629fdf0f90987a3d2814486d8bebdcd168802c4e2a4f2de8fde45e9bb96\",\"urls\":[\"bzz-raw://41fb05f716ae77b43f024eaab222eb0713a96f88ec4721d60f3194136a1fc93a\",\"dweb:/ipfs/Qma1g8QN2LPc6cFjg4CSr4Hko2SWJxodM1gABts1zvMss7\"]},\"contracts/interfaces/ISaitaSwapERC20.sol\":{\"keccak256\":\"0x93b70dfe258b5572967d0023ba22084b526f9c9b2d33c3f4e3eaeaefb7f795c2\",\"urls\":[\"bzz-raw://6c0135d65fec45265f1ce973f689e49fabcb78aee6f695eb3d10affe9792b1a9\",\"dweb:/ipfs/QmZm1wVKLQN3uKtk6YF6XD5RPkkZYAWsxEHxCuVhRcqvaR\"]},\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf6019897e2f7d2abe47bed3bcc78aa1dfe6a7b1bfc24308240c677bd5fce6538\",\"urls\":[\"bzz-raw://e60d28a99d0d2ce95655e8307c9cd82e92a331db7a805c090795deeb5790ccce\",\"dweb:/ipfs/QmcPeNUwAtLRTL1STVH172RF5XpiuQBoYgjh7oHGDF9umT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 19,
								"contract": "contracts/SaitaSwapERC20.sol:SaitaSwapERC20",
								"label": "totalSupply",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 23,
								"contract": "contracts/SaitaSwapERC20.sol:SaitaSwapERC20",
								"label": "balanceOf",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 29,
								"contract": "contracts/SaitaSwapERC20.sol:SaitaSwapERC20",
								"label": "allowance",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 31,
								"contract": "contracts/SaitaSwapERC20.sol:SaitaSwapERC20",
								"label": "DOMAIN_SEPARATOR",
								"offset": 0,
								"slot": "3",
								"type": "t_bytes32"
							},
							{
								"astId": 38,
								"contract": "contracts/SaitaSwapERC20.sol:SaitaSwapERC20",
								"label": "nonces",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/interfaces/ISaitaSwapERC20.sol": {
				"ISaitaSwapERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "PERMIT_TYPEHASH",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"PERMIT_TYPEHASH()": "30adf81f",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"PERMIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/ISaitaSwapERC20.sol\":\"ISaitaSwapERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/ISaitaSwapERC20.sol\":{\"keccak256\":\"0x93b70dfe258b5572967d0023ba22084b526f9c9b2d33c3f4e3eaeaefb7f795c2\",\"urls\":[\"bzz-raw://6c0135d65fec45265f1ce973f689e49fabcb78aee6f695eb3d10affe9792b1a9\",\"dweb:/ipfs/QmZm1wVKLQN3uKtk6YF6XD5RPkkZYAWsxEHxCuVhRcqvaR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"contracts/libraries/SafeMath.sol": {
				"SafeMath": {
					"abi": [],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"contracts/libraries/SafeMath.sol\":133:563  library SafeMath {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n    /* \"--CODEGEN--\":132:134   */\n  0x0b\n    /* \"--CODEGEN--\":166:173   */\n  dup3\n    /* \"--CODEGEN--\":155:164   */\n  dup3\n    /* \"--CODEGEN--\":146:153   */\n  dup3\n    /* \"--CODEGEN--\":137:174   */\n  codecopy\n    /* \"--CODEGEN--\":255:262   */\n  dup1\n    /* \"--CODEGEN--\":249:263   */\n  mload\n    /* \"--CODEGEN--\":246:247   */\n  0x00\n    /* \"--CODEGEN--\":241:264   */\n  byte\n    /* \"--CODEGEN--\":235:239   */\n  0x73\n    /* \"--CODEGEN--\":232:265   */\n  eq\n    /* \"--CODEGEN--\":222:224   */\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":269:278   */\n  invalid\n    /* \"--CODEGEN--\":222:224   */\ntag_1:\n    /* \"--CODEGEN--\":293:302   */\n  address\n    /* \"--CODEGEN--\":290:291   */\n  0x00\n    /* \"--CODEGEN--\":283:303   */\n  mstore\n    /* \"--CODEGEN--\":323:327   */\n  0x73\n    /* \"--CODEGEN--\":314:321   */\n  dup2\n    /* \"--CODEGEN--\":306:328   */\n  mstore8\n    /* \"--CODEGEN--\":347:354   */\n  dup3\n    /* \"--CODEGEN--\":338:345   */\n  dup2\n    /* \"--CODEGEN--\":331:355   */\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/libraries/SafeMath.sol\":133:563  library SafeMath {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa265627a7a72315820e86f037c8daf318e6951e30db7e0ba3934ac312f283746f636d1d1380a1e6eed64736f6c63430005100032\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e86f037c8daf318e6951e30db7e0ba3934ac312f283746f636d1d1380a1e6eed64736f6c63430005100032",
							"opcodes": "PUSH1 0x55 PUSH1 0x23 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x16 JUMPI INVALID JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE8 PUSH16 0x37C8DAF318E6951E30DB7E0BA3934AC BALANCE 0x2F 0x28 CALLDATACOPY CHAINID 0xF6 CALLDATASIZE 0xD1 0xD1 CODESIZE EXP 0x1E PUSH15 0xED64736F6C63430005100032000000 ",
							"sourceMap": "133:430:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a72315820e86f037c8daf318e6951e30db7e0ba3934ac312f283746f636d1d1380a1e6eed64736f6c63430005100032",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH6 0x627A7A723158 KECCAK256 0xE8 PUSH16 0x37C8DAF318E6951E30DB7E0BA3934AC BALANCE 0x2F 0x28 CALLDATACOPY CHAINID 0xF6 CALLDATASIZE 0xD1 0xD1 CODESIZE EXP 0x1E PUSH15 0xED64736F6C63430005100032000000 ",
							"sourceMap": "133:430:2:-;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "94",
								"totalCost": "17094"
							},
							"internal": {
								"add(uint256,uint256)": "infinite",
								"mul(uint256,uint256)": "infinite",
								"sub(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 133,
									"end": 563,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 133,
									"end": 563,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 132,
									"end": 134,
									"name": "PUSH",
									"value": "B"
								},
								{
									"begin": 166,
									"end": 173,
									"name": "DUP3"
								},
								{
									"begin": 155,
									"end": 164,
									"name": "DUP3"
								},
								{
									"begin": 146,
									"end": 153,
									"name": "DUP3"
								},
								{
									"begin": 137,
									"end": 174,
									"name": "CODECOPY"
								},
								{
									"begin": 255,
									"end": 262,
									"name": "DUP1"
								},
								{
									"begin": 249,
									"end": 263,
									"name": "MLOAD"
								},
								{
									"begin": 246,
									"end": 247,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 241,
									"end": 264,
									"name": "BYTE"
								},
								{
									"begin": 235,
									"end": 239,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 232,
									"end": 265,
									"name": "EQ"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "PUSH [tag]",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPI"
								},
								{
									"begin": 269,
									"end": 278,
									"name": "INVALID"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "tag",
									"value": "1"
								},
								{
									"begin": 222,
									"end": 224,
									"name": "JUMPDEST"
								},
								{
									"begin": 293,
									"end": 302,
									"name": "ADDRESS"
								},
								{
									"begin": 290,
									"end": 291,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 303,
									"name": "MSTORE"
								},
								{
									"begin": 323,
									"end": 327,
									"name": "PUSH",
									"value": "73"
								},
								{
									"begin": 314,
									"end": 321,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 328,
									"name": "MSTORE8"
								},
								{
									"begin": 347,
									"end": 354,
									"name": "DUP3"
								},
								{
									"begin": 338,
									"end": 345,
									"name": "DUP2"
								},
								{
									"begin": 331,
									"end": 355,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a265627a7a72315820e86f037c8daf318e6951e30db7e0ba3934ac312f283746f636d1d1380a1e6eed64736f6c63430005100032",
									".code": [
										{
											"begin": 133,
											"end": 563,
											"name": "PUSHDEPLOYADDRESS"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "ADDRESS"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "EQ"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "MSTORE"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "DUP1"
										},
										{
											"begin": 133,
											"end": 563,
											"name": "REVERT"
										}
									]
								}
							}
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/SafeMath.sol\":\"SafeMath\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/libraries/SafeMath.sol\":{\"keccak256\":\"0xf6019897e2f7d2abe47bed3bcc78aa1dfe6a7b1bfc24308240c677bd5fce6538\",\"urls\":[\"bzz-raw://e60d28a99d0d2ce95655e8307c9cd82e92a331db7a805c090795deeb5790ccce\",\"dweb:/ipfs/QmcPeNUwAtLRTL1STVH172RF5XpiuQBoYgjh7oHGDF9umT\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"contracts/SaitaSwapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/SaitaSwapERC20.sol",
					"exportedSymbols": {
						"SaitaSwapERC20": [
							419
						]
					},
					"id": 420,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "39:24:0"
						},
						{
							"absolutePath": "contracts/interfaces/ISaitaSwapERC20.sol",
							"file": "./interfaces/ISaitaSwapERC20.sol",
							"id": 2,
							"nodeType": "ImportDirective",
							"scope": 420,
							"sourceUnit": 538,
							"src": "65:42:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/libraries/SafeMath.sol",
							"file": "./libraries/SafeMath.sol",
							"id": 3,
							"nodeType": "ImportDirective",
							"scope": 420,
							"sourceUnit": 613,
							"src": "108:34:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"baseContracts": [
								{
									"arguments": null,
									"baseName": {
										"contractScope": null,
										"id": 4,
										"name": "ISaitaSwapERC20",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 537,
										"src": "171:15:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_ISaitaSwapERC20_$537",
											"typeString": "contract ISaitaSwapERC20"
										}
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "171:15:0"
								}
							],
							"contractDependencies": [
								537
							],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 419,
							"linearizedBaseContracts": [
								419,
								537
							],
							"name": "SaitaSwapERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"id": 8,
									"libraryName": {
										"contractScope": null,
										"id": 6,
										"name": "SafeMath",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 612,
										"src": "199:8:0",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_SafeMath_$612",
											"typeString": "library SafeMath"
										}
									},
									"nodeType": "UsingForDirective",
									"src": "193:24:0",
									"typeName": {
										"id": 7,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "212:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"id": 11,
									"name": "name",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "223:45:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 9,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "223:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "536169746153776170204c5073",
										"id": 10,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "253:15:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_1651e190aacb4c4c6e236d176db06acca329adaed8d7377e08d89572632a33ba",
											"typeString": "literal_string \"SaitaSwap LPs\""
										},
										"value": "SaitaSwap LPs"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 14,
									"name": "symbol",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "274:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory",
										"typeString": "string"
									},
									"typeName": {
										"id": 12,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "274:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "736c70",
										"id": 13,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "306:5:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_59bb1dcc26bd44c7ff692929b68000e77915cb096673e533d1aad5579644d458",
											"typeString": "literal_string \"slp\""
										},
										"value": "slp"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 17,
									"name": "decimals",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "317:35:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 15,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "317:5:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "3138",
										"id": 16,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "350:2:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_18_by_1",
											"typeString": "int_const 18"
										},
										"value": "18"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 19,
									"name": "totalSupply",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "358:24:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 18,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "358:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 23,
									"name": "balanceOf",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "388:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 22,
										"keyType": {
											"id": 20,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "396:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "388:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 21,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "407:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 29,
									"name": "allowance",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "435:61:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 28,
										"keyType": {
											"id": 24,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "443:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "435:44:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueType": {
											"id": 27,
											"keyType": {
												"id": 25,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "462:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "454:24:0",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueType": {
												"id": 26,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "473:4:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 31,
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "503:31:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 30,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "503:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 34,
									"name": "PERMIT_TYPEHASH",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "644:108:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 32,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "644:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"argumentTypes": null,
										"hexValue": "307836653731656461653132623162393766346431663630333730666566313031303566613266616165303132363131346131363963363438343564363132366339",
										"id": 33,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "686:66:0",
										"subdenomination": null,
										"typeDescriptions": {
											"typeIdentifier": "t_rational_49955707469362902507454157297736832118868343942642399513960811609542965143241_by_1",
											"typeString": "int_const 4995...(69 digits omitted)...3241"
										},
										"value": "0x6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c9"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 38,
									"name": "nonces",
									"nodeType": "VariableDeclaration",
									"scope": 419,
									"src": "758:38:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 37,
										"keyType": {
											"id": 35,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "766:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "758:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 36,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "777:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 46,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 45,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 40,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "818:21:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 39,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "818:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 42,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "841:23:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 41,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "841:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 44,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "866:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 43,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "866:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "817:60:0"
									},
									"src": "803:75:0"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 54,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 53,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 48,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "898:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 47,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "898:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 50,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "920:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 49,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "920:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 52,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 54,
												"src": "940:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 51,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "940:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "897:54:0"
									},
									"src": "883:69:0"
								},
								{
									"body": {
										"id": 86,
										"nodeType": "Block",
										"src": "978:434:0",
										"statements": [
											{
												"assignments": [
													57
												],
												"declarations": [
													{
														"constant": false,
														"id": 57,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 86,
														"src": "988:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 56,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "988:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 58,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "988:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 57,
															"isOffset": false,
															"isSlot": false,
															"src": "1033:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 59,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1010:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1070:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 65,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1150:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 64,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 621,
																			"src": "1140:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 66,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1140:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 69,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1269:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 68,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1263:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 70,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1263:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 67,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 621,
																			"src": "1253:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 71,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1253:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 74,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1309:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 73,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1303:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 75,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1303:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 72,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 621,
																			"src": "1293:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1293:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 77,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 57,
																		"src": "1332:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 79,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 645,
																				"src": "1365:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SaitaSwapERC20_$419",
																					"typeString": "contract SaitaSwapERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SaitaSwapERC20_$419",
																					"typeString": "contract SaitaSwapERC20"
																				}
																			],
																			"id": 78,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1357:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1357:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 62,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "1112:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1112:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1112:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 61,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "1089:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 82,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1089:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1070:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 84,
												"nodeType": "ExpressionStatement",
												"src": "1070:324:0"
											},
											{
												"id": 85,
												"nodeType": "PlaceholderStatement",
												"src": "1404:1:0"
											}
										]
									},
									"documentation": null,
									"id": 87,
									"name": "ReChain",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 55,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "978:0:0"
									},
									"src": "962:450:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 119,
										"nodeType": "Block",
										"src": "1439:429:0",
										"statements": [
											{
												"assignments": [
													91
												],
												"declarations": [
													{
														"constant": false,
														"id": 91,
														"name": "chainId",
														"nodeType": "VariableDeclaration",
														"scope": 119,
														"src": "1455:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 90,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1455:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 92,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "1455:12:0"
											},
											{
												"externalReferences": [
													{
														"chainId": {
															"declaration": 91,
															"isOffset": false,
															"isSlot": false,
															"src": "1500:7:0",
															"valueSize": 1
														}
													}
												],
												"id": 93,
												"nodeType": "InlineAssembly",
												"operations": "{ chainId := chainid() }",
												"src": "1477:51:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 117,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 94,
														"name": "DOMAIN_SEPARATOR",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 31,
														"src": "1537:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
																				"id": 99,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "string",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1617:84:0",
																				"subdenomination": null,
																				"typeDescriptions": {
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				},
																				"value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
																					"typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
																				}
																			],
																			"id": 98,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 621,
																			"src": "1607:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 100,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1607:95:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"id": 103,
																						"name": "name",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 11,
																						"src": "1736:4:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory",
																							"typeString": "string memory"
																						}
																					],
																					"id": 102,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1730:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 104,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1730:11:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 101,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 621,
																			"src": "1720:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1720:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"hexValue": "31",
																						"id": 108,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "string",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "1776:3:0",
																						"subdenomination": null,
																						"typeDescriptions": {
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						},
																						"value": "1"
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_stringliteral_c89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc6",
																							"typeString": "literal_string \"1\""
																						}
																					],
																					"id": 107,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "1770:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
																						"typeString": "type(bytes storage pointer)"
																					},
																					"typeName": "bytes"
																				},
																				"id": 109,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "1770:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 106,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 621,
																			"src": "1760:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 110,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1760:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"id": 111,
																		"name": "chainId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 91,
																		"src": "1799:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"id": 113,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 645,
																				"src": "1832:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_SaitaSwapERC20_$419",
																					"typeString": "contract SaitaSwapERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_SaitaSwapERC20_$419",
																					"typeString": "contract SaitaSwapERC20"
																				}
																			],
																			"id": 112,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1824:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": "address"
																		},
																		"id": 114,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1824:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"id": 96,
																		"name": "abi",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 614,
																		"src": "1579:3:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_abi",
																			"typeString": "abi"
																		}
																	},
																	"id": 97,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberName": "encode",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "1579:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function () pure returns (bytes memory)"
																	}
																},
																"id": 115,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1579:272:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 95,
															"name": "keccak256",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 621,
															"src": "1556:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																"typeString": "function (bytes memory) pure returns (bytes32)"
															}
														},
														"id": 116,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1556:305:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "1537:324:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 118,
												"nodeType": "ExpressionStatement",
												"src": "1537:324:0"
											}
										]
									},
									"documentation": null,
									"id": 120,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1429:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1439:0:0"
									},
									"scope": 419,
									"src": "1418:450:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 153,
										"nodeType": "Block",
										"src": "1922:149:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 132,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 127,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "1932:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 130,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "1962:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 128,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "1946:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 561,
															"src": "1946:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 131,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1946:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1932:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 133,
												"nodeType": "ExpressionStatement",
												"src": "1932:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 134,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "1978:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 136,
														"indexExpression": {
															"argumentTypes": null,
															"id": 135,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "1988:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1978:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 141,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "2012:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 137,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "1994:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 139,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 138,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "2004:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1994:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 140,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 561,
															"src": "1994:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 142,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1994:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1978:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 144,
												"nodeType": "ExpressionStatement",
												"src": "1978:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 147,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2050:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 146,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2042:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 148,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2042:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 149,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "2054:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 150,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 124,
															"src": "2058:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 145,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2033:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 151,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2033:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 152,
												"nodeType": "EmitStatement",
												"src": "2028:36:0"
											}
										]
									},
									"documentation": null,
									"id": 154,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 122,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1889:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 121,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1889:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 124,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 154,
												"src": "1901:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 123,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1901:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1888:24:0"
									},
									"returnParameters": {
										"id": 126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1922:0:0"
									},
									"scope": 419,
									"src": "1874:197:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 187,
										"nodeType": "Block",
										"src": "2127:155:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 170,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 161,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2137:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 163,
														"indexExpression": {
															"argumentTypes": null,
															"id": 162,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "2147:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2137:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 168,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2175:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 164,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2155:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 166,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 165,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 156,
																	"src": "2165:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2155:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 167,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 583,
															"src": "2155:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 169,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2155:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2137:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 171,
												"nodeType": "ExpressionStatement",
												"src": "2137:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 172,
														"name": "totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 19,
														"src": "2191:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 175,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 158,
																"src": "2221:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 173,
																"name": "totalSupply",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 19,
																"src": "2205:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 174,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 583,
															"src": "2205:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 176,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2205:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2191:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 178,
												"nodeType": "ExpressionStatement",
												"src": "2191:36:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 180,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 156,
															"src": "2251:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2265:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 181,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2257:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 183,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2257:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 184,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 158,
															"src": "2269:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 179,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2242:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2242:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "EmitStatement",
												"src": "2237:38:0"
											}
										]
									},
									"documentation": null,
									"id": 188,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2092:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 155,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2092:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 158,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2106:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2106:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2091:26:0"
									},
									"returnParameters": {
										"id": 160,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2127:0:0"
									},
									"scope": 419,
									"src": "2077:205:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 211,
										"nodeType": "Block",
										"src": "2358:96:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 203,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 197,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "2368:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 200,
															"indexExpression": {
																"argumentTypes": null,
																"id": 198,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 190,
																"src": "2378:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2368:16:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 201,
														"indexExpression": {
															"argumentTypes": null,
															"id": 199,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "2385:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2368:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 202,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 194,
														"src": "2396:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2368:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 204,
												"nodeType": "ExpressionStatement",
												"src": "2368:33:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 206,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 190,
															"src": "2425:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 207,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 192,
															"src": "2432:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 208,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "2441:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 205,
														"name": "Approval",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															46
														],
														"referencedDeclaration": 46,
														"src": "2416:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 209,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2416:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 210,
												"nodeType": "EmitStatement",
												"src": "2411:36:0"
											}
										]
									},
									"documentation": null,
									"id": 212,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2306:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 192,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2321:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2321:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 194,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2338:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 193,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2338:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2305:44:0"
									},
									"returnParameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2358:0:0"
									},
									"scope": 419,
									"src": "2288:166:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 249,
										"nodeType": "Block",
										"src": "2525:151:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 221,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2535:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 223,
														"indexExpression": {
															"argumentTypes": null,
															"id": 222,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2545:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2535:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 228,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2573:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 224,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2553:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 226,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 225,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 214,
																	"src": "2563:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2553:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 227,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sub",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 583,
															"src": "2553:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2553:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2535:44:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 231,
												"nodeType": "ExpressionStatement",
												"src": "2535:44:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 232,
															"name": "balanceOf",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "2589:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 234,
														"indexExpression": {
															"argumentTypes": null,
															"id": 233,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "2599:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2589:13:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 239,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 218,
																"src": "2623:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"argumentTypes": null,
																"baseExpression": {
																	"argumentTypes": null,
																	"id": 235,
																	"name": "balanceOf",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 23,
																	"src": "2605:9:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 237,
																"indexExpression": {
																	"argumentTypes": null,
																	"id": 236,
																	"name": "to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 216,
																	"src": "2615:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2605:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 238,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "add",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 561,
															"src": "2605:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																"typeString": "function (uint256,uint256) pure returns (uint256)"
															}
														},
														"id": 240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2605:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2589:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 242,
												"nodeType": "ExpressionStatement",
												"src": "2589:40:0"
											},
											{
												"eventCall": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 244,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "2653:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 245,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 216,
															"src": "2659:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 246,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 218,
															"src": "2663:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 243,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															54
														],
														"referencedDeclaration": 54,
														"src": "2644:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2644:25:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 248,
												"nodeType": "EmitStatement",
												"src": "2639:30:0"
											}
										]
									},
									"documentation": null,
									"id": 250,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 219,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 214,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2479:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2479:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 216,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2493:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 215,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2493:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 218,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "2505:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 217,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2505:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2478:38:0"
									},
									"returnParameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2525:0:0"
									},
									"scope": 419,
									"src": "2460:216:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 268,
										"nodeType": "Block",
										"src": "2752:74:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 260,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "2771:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 261,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2771:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 262,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 252,
															"src": "2783:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 263,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 254,
															"src": "2792:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 259,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "2762:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2762:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 265,
												"nodeType": "ExpressionStatement",
												"src": "2762:36:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 266,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2815:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 258,
												"id": 267,
												"nodeType": "Return",
												"src": "2808:11:0"
											}
										]
									},
									"documentation": null,
									"id": 269,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 255,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2699:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 254,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2716:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 253,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2716:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2698:29:0"
									},
									"returnParameters": {
										"id": 258,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 269,
												"src": "2746:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 256,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2746:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2745:6:0"
									},
									"scope": 419,
									"src": "2682:144:0",
									"stateMutability": "nonpayable",
									"superFunction": 482,
									"visibility": "external"
								},
								{
									"body": {
										"id": 287,
										"nodeType": "Block",
										"src": "2898:70:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 279,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "2918:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 280,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "2918:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														{
															"argumentTypes": null,
															"id": 281,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 271,
															"src": "2930:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 282,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "2934:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 278,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "2908:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 283,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2908:32:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 284,
												"nodeType": "ExpressionStatement",
												"src": "2908:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2957:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 277,
												"id": 286,
												"nodeType": "Return",
												"src": "2950:11:0"
											}
										]
									},
									"documentation": null,
									"id": 288,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2850:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 270,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2850:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2862:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 272,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2862:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2849:24:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 288,
												"src": "2892:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2892:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2891:6:0"
									},
									"scope": 419,
									"src": "2832:136:0",
									"stateMutability": "nonpayable",
									"superFunction": 491,
									"visibility": "external"
								},
								{
									"body": {
										"id": 337,
										"nodeType": "Block",
										"src": "3058:211:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"baseExpression": {
																"argumentTypes": null,
																"id": 299,
																"name": "allowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 29,
																"src": "3072:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 301,
															"indexExpression": {
																"argumentTypes": null,
																"id": 300,
																"name": "from",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 290,
																"src": "3082:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3072:15:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 304,
														"indexExpression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 302,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 627,
																"src": "3088:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "3088:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3072:27:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "UnaryOperation",
																"operator": "-",
																"prefix": true,
																"src": "3108:2:0",
																"subExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3109:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_minus_1_by_1",
																	"typeString": "int_const -1"
																}
															],
															"id": 305,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3103:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": "uint"
														},
														"id": 308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3103:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3072:39:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 328,
												"nodeType": "IfStatement",
												"src": "3068:138:0",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "3113:93:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"id": 325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"argumentTypes": null,
																	"baseExpression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 310,
																			"name": "allowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 29,
																			"src": "3127:9:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																				"typeString": "mapping(address => mapping(address => uint256))"
																			}
																		},
																		"id": 314,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 311,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 290,
																			"src": "3137:4:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3127:15:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																			"typeString": "mapping(address => uint256)"
																		}
																	},
																	"id": 315,
																	"indexExpression": {
																		"argumentTypes": null,
																		"expression": {
																			"argumentTypes": null,
																			"id": 312,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 627,
																			"src": "3143:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 313,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": null,
																		"src": "3143:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address_payable",
																			"typeString": "address payable"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "3127:27:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 323,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 294,
																			"src": "3189:5:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"expression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"baseExpression": {
																					"argumentTypes": null,
																					"id": 316,
																					"name": "allowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 29,
																					"src": "3157:9:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																						"typeString": "mapping(address => mapping(address => uint256))"
																					}
																				},
																				"id": 318,
																				"indexExpression": {
																					"argumentTypes": null,
																					"id": 317,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 290,
																					"src": "3167:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "3157:15:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 321,
																			"indexExpression": {
																				"argumentTypes": null,
																				"expression": {
																					"argumentTypes": null,
																					"id": 319,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 627,
																					"src": "3173:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 320,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3173:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address_payable",
																					"typeString": "address payable"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "3157:27:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 322,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "sub",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 583,
																		"src": "3157:31:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
																			"typeString": "function (uint256,uint256) pure returns (uint256)"
																		}
																	},
																	"id": 324,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3157:38:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3127:68:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 326,
															"nodeType": "ExpressionStatement",
															"src": "3127:68:0"
														}
													]
												}
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 330,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 290,
															"src": "3225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 331,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 292,
															"src": "3231:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 332,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 294,
															"src": "3235:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 329,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 250,
														"src": "3215:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3215:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 334,
												"nodeType": "ExpressionStatement",
												"src": "3215:26:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 335,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3258:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 298,
												"id": 336,
												"nodeType": "Return",
												"src": "3251:11:0"
											}
										]
									},
									"documentation": null,
									"id": 338,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 290,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "2996:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 289,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 292,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "3010:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 291,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3010:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 294,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "3022:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 293,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3022:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "2995:38:0"
									},
									"returnParameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 297,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 338,
												"src": "3052:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 296,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3052:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3051:6:0"
									},
									"scope": 419,
									"src": "2974:295:0",
									"stateMutability": "nonpayable",
									"superFunction": 502,
									"visibility": "external"
								},
								{
									"body": {
										"id": 417,
										"nodeType": "Block",
										"src": "3398:547:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 361,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 358,
																"name": "deadline",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 346,
																"src": "3416:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 359,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 617,
																	"src": "3428:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3428:15:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3416:27:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361697461537761703a2045585049524544",
															"id": 362,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3445:20:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7fc81504f24488ce1f9584711c0d23c64d6892e0eda1fc83b9771d563393c5b0",
																"typeString": "literal_string \"SaitaSwap: EXPIRED\""
															},
															"value": "SaitaSwap: EXPIRED"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7fc81504f24488ce1f9584711c0d23c64d6892e0eda1fc83b9771d563393c5b0",
																"typeString": "literal_string \"SaitaSwap: EXPIRED\""
															}
														],
														"id": 357,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															631
														],
														"referencedDeclaration": 631,
														"src": "3408:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 363,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3408:58:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 364,
												"nodeType": "ExpressionStatement",
												"src": "3408:58:0"
											},
											{
												"assignments": [
													366
												],
												"declarations": [
													{
														"constant": false,
														"id": 366,
														"name": "digest",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "3476:14:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 365,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "3476:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 388,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"hexValue": "1901",
																	"id": 370,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "string",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3550:10:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	"value": "\u0019\u0001"
																},
																{
																	"argumentTypes": null,
																	"id": 371,
																	"name": "DOMAIN_SEPARATOR",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 31,
																	"src": "3578:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"id": 375,
																					"name": "PERMIT_TYPEHASH",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 34,
																					"src": "3633:15:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 376,
																					"name": "owner",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 340,
																					"src": "3650:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 377,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 342,
																					"src": "3657:7:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 378,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 344,
																					"src": "3666:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 382,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "UnaryOperation",
																					"operator": "++",
																					"prefix": false,
																					"src": "3673:15:0",
																					"subExpression": {
																						"argumentTypes": null,
																						"baseExpression": {
																							"argumentTypes": null,
																							"id": 379,
																							"name": "nonces",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 38,
																							"src": "3673:6:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																								"typeString": "mapping(address => uint256)"
																							}
																						},
																						"id": 381,
																						"indexExpression": {
																							"argumentTypes": null,
																							"id": 380,
																							"name": "owner",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 340,
																							"src": "3680:5:0",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": true,
																						"nodeType": "IndexAccess",
																						"src": "3673:13:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"argumentTypes": null,
																					"id": 383,
																					"name": "deadline",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 346,
																					"src": "3690:8:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"argumentTypes": null,
																					"id": 373,
																					"name": "abi",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 614,
																					"src": "3622:3:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_abi",
																						"typeString": "abi"
																					}
																				},
																				"id": 374,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"memberName": "encode",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": null,
																				"src": "3622:10:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
																					"typeString": "function () pure returns (bytes memory)"
																				}
																			},
																			"id": 384,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3622:77:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		],
																		"id": 372,
																		"name": "keccak256",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 621,
																		"src": "3612:9:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																			"typeString": "function (bytes memory) pure returns (bytes32)"
																		}
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3612:88:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
																		"typeString": "literal_string \"\u0019\u0001\""
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"argumentTypes": null,
																	"id": 368,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 614,
																	"src": "3516:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 369,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "3516:16:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 386,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3516:198:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 367,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 621,
														"src": "3493:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3493:231:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3476:248:0"
											},
											{
												"assignments": [
													390
												],
												"declarations": [
													{
														"constant": false,
														"id": 390,
														"name": "recoveredAddress",
														"nodeType": "VariableDeclaration",
														"scope": 417,
														"src": "3734:24:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 389,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3734:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 397,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 392,
															"name": "digest",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 366,
															"src": "3771:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 393,
															"name": "v",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 348,
															"src": "3779:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														{
															"argumentTypes": null,
															"id": 394,
															"name": "r",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "3782:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"argumentTypes": null,
															"id": 395,
															"name": "s",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "3785:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 391,
														"name": "ecrecover",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 619,
														"src": "3761:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_ecrecover_pure$_t_bytes32_$_t_uint8_$_t_bytes32_$_t_bytes32_$returns$_t_address_$",
															"typeString": "function (bytes32,uint8,bytes32,bytes32) pure returns (address)"
														}
													},
													"id": 396,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3761:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3734:53:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 407,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 399,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "3805:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "!=",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 401,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3833:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 400,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "3825:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": "address"
																	},
																	"id": 402,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "3825:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address_payable",
																		"typeString": "address payable"
																	}
																},
																"src": "3805:30:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 404,
																	"name": "recoveredAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 390,
																	"src": "3839:16:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 405,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 340,
																	"src": "3859:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "3839:25:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "3805:59:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "5361697461537761703a20494e56414c49445f5349474e4154555245",
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3866:30:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_dc5c53878d9d3bc9c427762e7302c27a226aa029e99c91976a440edf2c08eea6",
																"typeString": "literal_string \"SaitaSwap: INVALID_SIGNATURE\""
															},
															"value": "SaitaSwap: INVALID_SIGNATURE"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_dc5c53878d9d3bc9c427762e7302c27a226aa029e99c91976a440edf2c08eea6",
																"typeString": "literal_string \"SaitaSwap: INVALID_SIGNATURE\""
															}
														],
														"id": 398,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															631
														],
														"referencedDeclaration": 631,
														"src": "3797:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3797:100:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 410,
												"nodeType": "ExpressionStatement",
												"src": "3797:100:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 412,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 340,
															"src": "3916:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 413,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 342,
															"src": "3923:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"argumentTypes": null,
															"id": 414,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 344,
															"src": "3932:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 411,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 212,
														"src": "3907:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3907:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "3907:31:0"
											}
										]
									},
									"documentation": null,
									"id": 418,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 355,
											"modifierName": {
												"argumentTypes": null,
												"id": 354,
												"name": "ReChain",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 87,
												"src": "3390:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "3390:7:0"
										}
									],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 340,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3291:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 339,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3291:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 342,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3306:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3306:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 344,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3323:10:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 343,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3323:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 346,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3335:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3335:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 348,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3350:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 347,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3350:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 350,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3359:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 349,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3359:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 418,
												"src": "3370:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 351,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "3290:90:0"
									},
									"returnParameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3398:0:0"
									},
									"scope": 419,
									"src": "3275:670:0",
									"stateMutability": "nonpayable",
									"superFunction": 536,
									"visibility": "external"
								}
							],
							"scope": 420,
							"src": "144:3803:0"
						}
					],
					"src": "39:3908:0"
				},
				"id": 0
			},
			"contracts/interfaces/ISaitaSwapERC20.sol": {
				"ast": {
					"absolutePath": "contracts/interfaces/ISaitaSwapERC20.sol",
					"exportedSymbols": {
						"ISaitaSwapERC20": [
							537
						]
					},
					"id": 538,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 421,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:1"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": null,
							"fullyImplemented": false,
							"id": 537,
							"linearizedBaseContracts": [
								537
							],
							"name": "ISaitaSwapERC20",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": null,
									"id": 429,
									"name": "Approval",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 423,
												"indexed": true,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "73:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "73:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 425,
												"indexed": true,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "96:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 424,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "96:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 427,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "121:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 426,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "121:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "72:60:1"
									},
									"src": "58:75:1"
								},
								{
									"anonymous": false,
									"documentation": null,
									"id": 437,
									"name": "Transfer",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 431,
												"indexed": true,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "153:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 430,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "153:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 433,
												"indexed": true,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "175:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 432,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "175:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 435,
												"indexed": false,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "195:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 434,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "195:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "152:54:1"
									},
									"src": "138:69:1"
								},
								{
									"body": null,
									"documentation": null,
									"id": 442,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 438,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "226:2:1"
									},
									"returnParameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 442,
												"src": "252:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 439,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "252:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "251:15:1"
									},
									"scope": 537,
									"src": "213:54:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 447,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "287:2:1"
									},
									"returnParameters": {
										"id": 446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 445,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 447,
												"src": "313:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 444,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "313:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "312:15:1"
									},
									"scope": 537,
									"src": "272:56:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 452,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "350:2:1"
									},
									"returnParameters": {
										"id": 451,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 450,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 452,
												"src": "376:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 449,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "376:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "375:7:1"
									},
									"scope": 537,
									"src": "333:50:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 457,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 453,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "408:2:1"
									},
									"returnParameters": {
										"id": 456,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 455,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 457,
												"src": "434:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 454,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:6:1"
									},
									"scope": 537,
									"src": "388:52:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 464,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 460,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 459,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "464:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 458,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "464:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "463:15:1"
									},
									"returnParameters": {
										"id": 463,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 462,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 464,
												"src": "502:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 461,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "502:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "501:6:1"
									},
									"scope": 537,
									"src": "445:63:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 473,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 469,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 466,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "532:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "532:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 468,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "547:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 467,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "547:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "531:32:1"
									},
									"returnParameters": {
										"id": 472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 471,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 473,
												"src": "587:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 470,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "587:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "586:6:1"
									},
									"scope": 537,
									"src": "513:80:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 482,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 475,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "616:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 474,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "616:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 477,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "633:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 476,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "633:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "615:29:1"
									},
									"returnParameters": {
										"id": 481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 480,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 482,
												"src": "663:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 479,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "663:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "662:6:1"
									},
									"scope": 537,
									"src": "599:70:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 491,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 487,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 484,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "692:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 483,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "692:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 486,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "704:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 485,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "704:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "691:24:1"
									},
									"returnParameters": {
										"id": 490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "734:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 488,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "734:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "733:6:1"
									},
									"scope": 537,
									"src": "674:66:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 502,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 493,
												"name": "from",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "767:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 492,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "767:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 495,
												"name": "to",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "781:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 494,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "781:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 497,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "793:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 496,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "793:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "766:38:1"
									},
									"returnParameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 502,
												"src": "823:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 499,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "823:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "822:6:1"
									},
									"scope": 537,
									"src": "745:84:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 507,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "860:2:1"
									},
									"returnParameters": {
										"id": 506,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 505,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 507,
												"src": "886:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 504,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "886:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "885:9:1"
									},
									"scope": 537,
									"src": "835:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 512,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "PERMIT_TYPEHASH",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "924:2:1"
									},
									"returnParameters": {
										"id": 511,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 510,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 512,
												"src": "950:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 509,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "950:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "949:9:1"
									},
									"scope": 537,
									"src": "900:59:1",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 519,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 515,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 514,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "980:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 513,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "980:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "979:15:1"
									},
									"returnParameters": {
										"id": 518,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 517,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 519,
												"src": "1018:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 516,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1018:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1017:6:1"
									},
									"scope": 537,
									"src": "964:60:1",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "external"
								},
								{
									"body": null,
									"documentation": null,
									"id": 536,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 521,
												"name": "owner",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1046:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 520,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1046:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 523,
												"name": "spender",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1061:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 522,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1061:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 525,
												"name": "value",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1078:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 524,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1078:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 527,
												"name": "deadline",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1090:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 526,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1090:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 529,
												"name": "v",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1105:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 528,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1105:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 531,
												"name": "r",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1114:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 530,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1114:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"name": "s",
												"nodeType": "VariableDeclaration",
												"scope": 536,
												"src": "1125:9:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 532,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1125:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "1045:90:1"
									},
									"returnParameters": {
										"id": 535,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:1"
									},
									"scope": 537,
									"src": "1030:115:1",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "external"
								}
							],
							"scope": 538,
							"src": "26:1121:1"
						}
					],
					"src": "0:1147:1"
				},
				"id": 1
			},
			"contracts/libraries/SafeMath.sol": {
				"ast": {
					"absolutePath": "contracts/libraries/SafeMath.sol",
					"exportedSymbols": {
						"SafeMath": [
							612
						]
					},
					"id": 613,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 539,
							"literals": [
								"solidity",
								">=",
								"0.5",
								".16"
							],
							"nodeType": "PragmaDirective",
							"src": "0:25:2"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": null,
							"fullyImplemented": true,
							"id": 612,
							"linearizedBaseContracts": [
								612
							],
							"name": "SafeMath",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 560,
										"nodeType": "Block",
										"src": "216:66:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 553,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 549,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 546,
																			"src": "235:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 550,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 541,
																				"src": "239:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 551,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 543,
																				"src": "243:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "239:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "235:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 554,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "234:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 555,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 541,
																"src": "249:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "234:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6164642d6f766572666c6f77",
															"id": 557,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "252:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															},
															"value": "ds-math-add-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3903056b84ed2aba2be78662dc6c5c99b160cebe9af9bd9493d0fc28ff16f6db",
																"typeString": "literal_string \"ds-math-add-overflow\""
															}
														],
														"id": 548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															631
														],
														"referencedDeclaration": 631,
														"src": "226:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "226:49:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 559,
												"nodeType": "ExpressionStatement",
												"src": "226:49:2"
											}
										]
									},
									"documentation": null,
									"id": 561,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "add",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 544,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 541,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "169:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 540,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "169:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 543,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "177:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 542,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "177:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "168:16:2"
									},
									"returnParameters": {
										"id": 547,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "208:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 545,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "208:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "207:8:2"
									},
									"scope": 612,
									"src": "156:126:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 582,
										"nodeType": "Block",
										"src": "348:67:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"id": 575,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"argumentTypes": null,
																			"id": 571,
																			"name": "z",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 568,
																			"src": "367:1:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"argumentTypes": null,
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"argumentTypes": null,
																				"id": 572,
																				"name": "x",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 563,
																				"src": "371:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"argumentTypes": null,
																				"id": 573,
																				"name": "y",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 565,
																				"src": "375:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "371:5:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "367:9:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 576,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "366:11:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"argumentTypes": null,
																"id": 577,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 563,
																"src": "381:1:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "366:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d7375622d756e646572666c6f77",
															"id": 579,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "384:23:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															},
															"value": "ds-math-sub-underflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_03b20b9f6e6e7905f077509fd420fb44afc685f254bcefe49147296e1ba25590",
																"typeString": "literal_string \"ds-math-sub-underflow\""
															}
														],
														"id": 570,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															631
														],
														"referencedDeclaration": 631,
														"src": "358:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 580,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "358:50:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 581,
												"nodeType": "ExpressionStatement",
												"src": "358:50:2"
											}
										]
									},
									"documentation": null,
									"id": 583,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sub",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 563,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "301:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 562,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "301:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 565,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "309:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "309:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "300:16:2"
									},
									"returnParameters": {
										"id": 569,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 568,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 583,
												"src": "340:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 567,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "340:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "339:8:2"
									},
									"scope": 612,
									"src": "288:127:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 610,
										"nodeType": "Block",
										"src": "481:80:2",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 606,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 593,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 587,
																	"src": "499:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "30",
																	"id": 594,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "504:1:2",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "499:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "||",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 605,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 603,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"argumentTypes": null,
																		"components": [
																			{
																				"argumentTypes": null,
																				"id": 600,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftHandSide": {
																					"argumentTypes": null,
																					"id": 596,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 590,
																					"src": "510:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "Assignment",
																				"operator": "=",
																				"rightHandSide": {
																					"argumentTypes": null,
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 599,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"argumentTypes": null,
																						"id": 597,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 585,
																						"src": "514:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"argumentTypes": null,
																						"id": 598,
																						"name": "y",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 587,
																						"src": "518:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "514:5:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "510:9:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 601,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "509:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"argumentTypes": null,
																		"id": 602,
																		"name": "y",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 587,
																		"src": "523:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "509:15:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 604,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "528:1:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "509:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "499:30:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"argumentTypes": null,
															"hexValue": "64732d6d6174682d6d756c2d6f766572666c6f77",
															"id": 607,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "531:22:2",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															},
															"value": "ds-math-mul-overflow"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_25a0ef6406c6af6852555433653ce478274cd9f03a5dec44d001868a76b3bfdd",
																"typeString": "literal_string \"ds-math-mul-overflow\""
															}
														],
														"id": 592,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															630,
															631
														],
														"referencedDeclaration": 631,
														"src": "491:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 608,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "491:63:2",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 609,
												"nodeType": "ExpressionStatement",
												"src": "491:63:2"
											}
										]
									},
									"documentation": null,
									"id": 611,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mul",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 588,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 585,
												"name": "x",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "434:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 584,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "434:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 587,
												"name": "y",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "442:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 586,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "442:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "433:16:2"
									},
									"returnParameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 590,
												"name": "z",
												"nodeType": "VariableDeclaration",
												"scope": 611,
												"src": "473:6:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 589,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "473:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "472:8:2"
									},
									"scope": 612,
									"src": "421:140:2",
									"stateMutability": "pure",
									"superFunction": null,
									"visibility": "internal"
								}
							],
							"scope": 613,
							"src": "133:430:2"
						}
					],
					"src": "0:563:2"
				},
				"id": 2
			}
		}
	}
}